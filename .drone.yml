workspace:
  base: /go
  path: src/github.com/kowala-tech/kcoin

clone:
  git:
    image: plugins/git:next
    pull: true
    tags: true

pipeline:
  bindings:
    image: kowalatech/go:1.0.8
    commands:
      - make bindings

  go-generate:
    image: kowalatech/go:1.0.8
    commands:
    - make go-generate

  test_kcoin:
    group: testing
    image: kowalatech/go:1.0.8
    commands:
      - make test
      - make lint
    when:
      event: [pull_request]

  test_notifications:
    group: testing
    image: kowalatech/go:1.0.8
    environment:
      - NSQ_ADDR=nsqd:4150
      - REDIS_ADDR=redis:6379
    commands:
      - make test_notifications
    when:
      event: [pull_request]

  e2e:
    group: testing
    image: kowalatech/go:1.0.8
    environment:
      - DOCKER_HOST=tcp://docker:2375
      - DOCKER_PUBLIC_IP=docker
    commands:
      - make dev_docker_images
      - make e2e
    when:
      event: [pull_request]
  
  wallet-app:
    group: testing
    image: node:9
    commands:
      - make wallet-app-tests
    when:
      event: [pull_request]

  docker_build:
    group: build-artifacts
    image: kowalatech/go:1.0.8
    environment:
      - DOCKER_HOST=tcp://docker:2375
      - DOCKER_PUBLIC_IP=docker
    commands:
      - make dev_docker_images
    when:
      event: [push]

  docker_kusd:
    group: docker-deployment
    image: kowalatech/drone-docker
    pull: true
    repo: kowalatech/kusd
    secrets: [ docker_username, docker_password ]
    privileged: true
    auto_tag: true
    dockerfile: client/release/kcoin.Dockerfile
    when:
      branch: [dev, master]
      event: [push, tag]

  docker_bootnode:
    group: docker-deployment
    image: kowalatech/drone-docker
    pull: true
    repo: kowalatech/bootnode
    secrets: [ docker_username, docker_password ]
    privileged: true
    auto_tag: true
    dockerfile: client/release/bootnode.Dockerfile
    when:
      branch: [dev, master]
      event: [push, tag]

  docker_faucet:
    group: docker-deployment
    image: kowalatech/drone-docker
    pull: true
    repo: kowalatech/faucet
    secrets: [ docker_username, docker_password ]
    privileged: true
    auto_tag: true
    dockerfile: client/release/faucet.Dockerfile
    when:
      branch: [dev, master]
      event: [push, tag]

  docker_notifications_api:
    group: docker-deployment
    image: kowalatech/drone-docker
    pull: true
    repo: kowalatech/backend_api
    dockerfile: notifications/api.Dockerfile
    secrets: [ docker_username, docker_password ]
    privileged: true
    auto_tag: true
    when:
      branch: [dev, master]
      event: [push, tag]

  docker_notifications_emailer:
    group: docker-deployment
    image: kowalatech/drone-docker
    pull: true
    repo: kowalatech/emailer
    dockerfile: notifications/emailer.Dockerfile
    secrets: [ docker_username, docker_password ]
    privileged: true
    auto_tag: true
    when:
      branch: [dev, master]
      event: [push, tag]

  docker_notifications_db_sync:
    group: docker-deployment
    image: kowalatech/drone-docker
    pull: true
    repo: kowalatech/transactions_persistance
    dockerfile: notifications/transactions_db_synchronize.Dockerfile
    secrets: [ docker_username, docker_password ]
    privileged: true
    auto_tag: true
    when:
      branch: [dev, master]
      event: [push, tag]

  docker_netstats:
    group: docker-deployment
    image: kowalatech/drone-docker
    pull: true
    repo: kowalatech/netstats
    dockerfile: netstats/Dockerfile
    secrets: [ docker_username, docker_password ]
    privileged: true
    auto_tag: true
    when:
      branch: [dev, master]
      event: [push, tag]

  docker_explorer_web:
    group: docker-deployment
    image: kowalatech/drone-docker
    pull: true
    repo: kowalatech/kexplorer
    dockerfile: explorer/web.Dockerfile
    secrets: [ docker_username, docker_password ]
    privileged: true
    auto_tag: true
    when:
      branch: [dev, master]
      event: [push, tag]

  docker_explorer_sync:
    group: docker-deployment
    image: kowalatech/drone-docker
    pull: true
    repo: kowalatech/kexplorersync
    dockerfile: explorer/sync.Dockerfile
    secrets: [ docker_username, docker_password ]
    privileged: true
    auto_tag: true
    when:
      branch: [dev, master]
      event: [push, tag]

  build-artifacts:
    group: build-artifacts
    image: kowalatech/go:1.0.8
    environment:
      - DOCKER_HOST=tcp://docker:2375
    commands:
      - make kcoin-cross
    when:
      event: [push, tag]
      branch: [dev]

  compile-gource-video:
    group: build-artifacts
    image: adk486/docker-gource
    repo: kowalatech/kcoin
    when:
      branch: [dev]
      event: [push]
    
  build_docs:
    group: build-artifacts
    image: kowalatech/mkdocs
    commands:
      - make build_docs
    when:
      event: [push,tag]
      branch: [master,dev]

  upload-gource-mp4-to-s3:
    group: asset-deployment
    image: plugins/s3
    bucket: releases.kowala.io
    region: us-east-1
    acl: public-read
    source: gource-audio.mp4
    target: /kowala-kcoin-development-history.mp4
    when:
      branch: [dev]
      event: [push]

  upload-binary-assets-to-s3:
    group: asset-deployment
    image: plugins/s3
    bucket: releases.kowala.io
    region: us-east-1
    acl: public-read
    source: client/build/bin/kcoin-*.zip
    strip_prefix: client/build/bin/
    target: /
    when:
      event: [push, tag]
      branch: [dev]

  build-wallet-app:
    image: node:9
    environment:
      - KOWALA_NETWORK="kusd-zygote"
    commands:
      - cd wallet-app ; yarn run drone:build
    when:
      event: [push]
      branch: [master]

  upload-kusd-zygote:
    image: plugins/s3
    acl: public-read
    region: "us-east-1"
    bucket: "wallet.zygote.kowala.io"
    source: dist/**/*
    strip_prefix: dist
    target: /
    encryption: AES256
    when:
      event: [push]
      branch: [master]

  upload-dev-docs-to-s3:
    group: asset-deployment
    image: plugins/s3
    acl: public-read
    region: "us-east-1"
    bucket: "docs.kowala.io"
    source: docs/site/**/*
    strip_prefix: docs/site
    target: /
    encryption: AES256
    when:
      event: [push]
      branch: [dev]

  upload-prod-docs-to-s3:
    group: asset-deployment
    image: plugins/s3
    acl: public-read
    region: "us-east-1"
    bucket: "docs.kowala.tech"
    source: docs/site/**/*
    strip_prefix: docs/site
    target: /
    encryption: AES256
    when:
      event: [push,tag]
      branch: [master]

  upload-e2e-logs:
    image: plugins/s3
    acl: public-read
    region: "us-east-1"
    bucket: "kcoin-e2e"
    source: e2e/logs/*
    strip_prefix: e2e/logs
    target: /logs/${DRONE_BUILD_NUMBER}
    encryption: AES256
    when:
      status: failure
      event: [pull_request]

  notify-dev:
    group: notify
    image: plugins/slack
    secrets: [ slack_webhook ]
    channel: ci-notifications
    username: drone
    template: >
        *CI build #{{build.number}}* ({{build.event}} to `{{build.branch}}`{{#if build.pull}}[PR #{{build.pull}}]{{/if}} by @{{build.author}}) *{{#success build.status}}successful{{else}}failed{{/success}}* after {{since build.started}}

        _${DRONE_COMMIT_MESSAGE}_

        {{#if build.tag}}`v{{build.tag}}` | {{/if}}Commit <${DRONE_COMMIT_LINK}|{{build.commit}}> | <{{build.link}}|Build #{{build.number}}>
    when:
      status: failure
      event: [push, tag, pull_request]

services:
  docker:
    image: docker:dind
    command: [ '-l', 'fatal' ]
    privileged: true

  nsqlookupd:
    image: nsqio/nsq
    commands:
      - /nsqlookupd

  nsqd:
    image: nsqio/nsq
    commands:
      - /nsqd --lookupd-tcp-address=nsqlookupd:4160

  redis:
    image: redis:alpine

workspace:
  base: /go
  path: src/github.com/kowala-tech/kUSD

clone:
  git:
    image: plugins/git
    tags: true

pipeline:

  test:
    image: kowalatech/go:1.0.1
    commands:
      - make test
      - make lint
    when:
      event: [push]
      branch: [feature/*, hotfix/*]

  build:
    image: kowalatech/go:1.0.1
    commands:
      - make
    when:
      event: [push, tag]
      branch: [master, dev, refs/tags/*]

  docker_kusd_dev:
    group: docker-deployment
    image: plugins/docker
    repo: kowalatech/kusd
    secrets: [ docker_username, docker_password ]
    tags: dev
    dockerfile: kusd.Dockerfile
    when:
      branch: [dev]

  docker_bootnode_dev:
    group: docker-deployment
    image: plugins/docker
    repo: kowalatech/bootnode
    secrets: [ docker_username, docker_password ]
    tags: dev
    dockerfile: bootnode.Dockerfile
    when:
      branch: [dev]

  docker_faucet_dev:
    group: docker-deployment
    image: plugins/docker
    repo: kowalatech/faucet
    secrets: [ docker_username, docker_password ]
    tags: dev
    dockerfile: faucet.Dockerfile
    when:
      branch: [dev]

  docker_kusd_tag:
    group: docker-deployment
    image: kowalatech/drone-docker
    repo: kowalatech/kusd
    secrets: [ docker_username, docker_password ]
    privileged: true
    auto_tag: true
    dockerfile: kusd.Dockerfile
    when:
      event: tag

  docker_bootnode_tag:
    group: docker-deployment
    image: kowalatech/drone-docker
    repo: kowalatech/bootnode
    secrets: [ docker_username, docker_password ]
    privileged: true
    auto_tag: true
    dockerfile: bootnode.Dockerfile
    when:
      event: tag

  docker_faucet_tag:
    group: docker-deployment
    image: kowalatech/drone-docker
    repo: kowalatech/faucet
    secrets: [ docker_username, docker_password ]
    privileged: true
    auto_tag: true
    dockerfile: faucet.Dockerfile
    when:
      event: tag

  notify-dev:
    group: notify
    image: plugins/slack
    secrets: [ slack_webhook ] 
    channel: dev
    username: kowala-tech/kUSD drone
    template: >
        *CI build #{{build.number}}* on branch {{build.branch}} *{{#success build.status}}successful{{else}}failed{{/success}}* in {{since build.started}}

        > ${DRONE_COMMIT_MESSAGE}

        {{#if build.tag}}`v{{build.tag}}` | {{/if}}Commit <${DRONE_COMMIT_LINK}|{{build.commit}}> | <{{build.link}}|Build #{{build.number}}>
    when:
      event: [push, tag]
      branch: [master, dev, refs/tags/*]

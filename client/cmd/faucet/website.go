// Code generated by go-bindata.
// sources:
// faucet.html
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _faucetHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x5a\x7b\x73\xdb\x38\x92\xff\xdb\xf9\x14\x1d\x6e\xbc\x92\xce\xe2\x43\xf2\x23\x8e\x2c\x2a\x95\xcd\xec\xce\xe5\xee\xe6\x51\x93\x4c\xdd\x6e\xcd\x4e\x5d\x81\x64\x4b\x44\x0c\x02\x1c\x00\x94\xac\xb8\xf4\xdd\xaf\x00\x90\x14\xf5\xb0\xf3\x9a\xbd\x1b\xff\x21\x13\xaf\xee\x46\xf7\xaf\xd1\x8d\x26\xa7\x4f\xbf\xf9\xe1\xf5\xbb\x7f\xfc\xf8\x57\xc8\x75\xc1\x66\x4f\xa6\xe6\x1f\x30\xc2\x17\xb1\x87\xdc\x9b\x3d\x39\x99\xe6\x48\xb2\xd9\x93\x93\x93\x69\x81\x9a\x40\x9a\x13\xa9\x50\xc7\x5e\xa5\xe7\xfe\xb5\xb7\x1d\xc8\xb5\x2e\x7d\xfc\xad\xa2\xcb\xd8\xfb\xbb\xff\xf3\x2b\xff\xb5\x28\x4a\xa2\x69\xc2\xd0\x83\x54\x70\x8d\x5c\xc7\xde\x9b\xbf\xc6\x98\x2d\xb0\xb3\x8e\x93\x02\x63\x6f\x49\x71\x55\x0a\xa9\x3b\x53\x57\x34\xd3\x79\x9c\xe1\x92\xa6\xe8\xdb\xc6\x10\x28\xa7\x9a\x12\xe6\xab\x94\x30\x8c\x47\xde\xec\x89\xa1\xa3\xa9\x66\x38\xbb\xfd\xf9\xed\x37\xf0\x37\x52\xa5\xa8\xa7\xa1\xeb\xb2\xa3\x8c\xf2\x5b\xc8\x25\xce\x63\xcf\xc8\xa8\x26\x61\x98\x66\xfc\xbd\x0a\x52\x26\xaa\x6c\xce\x88\xc4\x20\x15\x45\x48\xde\x93\xbb\x90\xd1\x44\x85\x7a\x45\xb5\x46\xe9\x27\x42\x68\xa5\x25\x29\xc3\xf3\xe0\x3c\x78\x1e\xa6\x4a\x85\x6d\x5f\x50\x50\x1e\xa4\x4a\x79\x20\x91\xc5\x9e\xd2\x6b\x86\x2a\x47\xd4\x1e\x84\xb3\x2f\xe3\x3b\x17\x5c\xfb\x64\x85\x4a\x14\x18\x5e\x04\xcf\x83\xc8\xb2\xec\x76\x7f\x09\x57\xb3\x5e\x05\x0b\x21\x16\x0c\x49\x49\x95\xe5\x9a\x2a\xf5\x72\x4e\x0a\xca\xd6\xf1\x77\x66\x1c\xa5\x24\x7a\x32\x8e\xa2\xe1\x79\x14\x0d\x2f\xa2\x68\x78\x19\x45\xc3\xab\x28\x3a\xce\xc9\xb0\x52\xa9\xa4\xa5\x06\x25\xd3\x4f\xde\xe1\xfb\xdf\x2a\x94\xeb\xf0\x3c\x18\x05\xa3\xba\x61\x77\xf4\x5e\x79\xb3\x69\xe8\x08\xce\xbe\x8a\xb6\xcf\x85\x5e\x87\xe3\xe0\x22\x18\x85\x25\x49\x6f\xc9\x02\xb3\x86\x93\x19\x0a\x9a\xce\xdf\x8d\xef\x43\x68\x79\xbf\x0f\x96\xdf\x83\x59\x21\x0a\xe4\x3a\x78\xaf\xc2\x71\x30\xba\x0e\xa2\xa6\xe3\x90\xbe\x65\x60\x8c\x66\x58\x9d\xe4\xa3\x21\xe4\xe3\x21\xe4\xe7\x70\x6f\xda\x27\x16\x54\x0e\x00\x13\xd8\x22\xe0\x66\x3b\xb8\x42\xba\xc8\xf5\x04\xc6\x51\x64\x7b\x37\xe6\x87\xb8\xd5\xa9\x60\x42\x4e\xe0\x4f\xa3\x79\x74\x7e\x9e\x1d\x59\x74\xb1\xb3\x68\x92\x8b\x25\xca\xdd\xa5\x97\xa3\x51\x76\x3d\xfa\xd8\xd2\x60\x89\x52\xd3\x94\x30\x3f\x45\xae\x51\xd6\xd2\x17\x94\xfb\x79\x3d\x7f\x14\x45\xa7\x37\xc7\x7a\x97\xb9\xeb\xce\xa8\x2a\x19\x59\x4f\x60\xce\xf0\xce\x75\x11\x46\x17\xdc\xa7\x1a\x0b\x35\x01\x47\xd9\x0d\x24\x24\xbd\x5d\x48\x51\xf1\xcc\x3f\xb6\xc7\xa6\x6f\x3e\x9f\xdf\x7c\xa1\x1a\x3b\x2c\x8c\x16\xce\x47\xe9\xf5\x25\x3c\xa5\x85\x39\xfd\x08\x77\x2b\x01\xba\x93\xfc\x42\x7c\xf0\x19\xe5\x48\xa4\xbf\x90\x24\xa3\xc8\x75\x5f\x8b\x72\xd8\x2e\x8f\x4e\xcd\xf3\xf3\x51\x72\x7d\x01\xa3\x0b\xd3\xb8\xba\x18\xbd\xb8\x8e\xe0\xdc\x8e\x3c\x27\xa3\xcb\xe7\x04\x2e\xae\x4c\xe3\xc5\xf5\x28\x7a\x3e\x82\xab\xb1\x69\x24\x18\x91\xab\x4b\x78\xfe\xc2\x34\x30\x8b\xc6\x97\xd7\xf0\xc2\x4e\x9b\xbf\x88\xa2\xcb\x0b\xab\xdc\xc1\x47\xc4\x5b\x61\x72\x4b\xf5\x1f\x58\xc2\x43\xc9\x20\x11\x5a\x8b\xe2\xff\x51\xbe\x39\x65\x1a\xe5\x04\x4a\x29\x16\x34\x9b\x7c\xf3\xf7\x37\x05\x59\xe0\x3b\x49\xb8\x9a\x0b\x59\x04\xdf\xd1\x54\x0a\x25\xe6\x3a\x68\xc5\x06\xa5\x89\xd4\xaf\x0d\x04\x95\x96\x71\xaf\x96\xbd\x37\x04\xe4\x59\xa7\xdb\x31\xee\x0d\xbf\xad\x17\xbe\x5b\x97\x18\x47\x30\xe8\x78\x95\xe1\x2a\x51\xa9\xda\x9d\x4a\xa1\xa8\xa6\x82\x4f\xcc\x59\x4f\x34\x5d\xe2\xb1\xb9\xaa\x24\xfc\x60\x01\x49\x94\x60\x95\xc6\x3d\x57\x4b\x98\x48\x6f\x5d\x9f\x0d\xdd\x5d\x37\xad\x9d\x68\x95\xd3\x7a\x19\x58\x46\x50\x4a\xac\xc9\x43\x49\xb2\x8c\xf2\xc5\x04\xae\xca\xda\x63\xa1\x20\x72\x41\xf9\x04\xa2\xed\x92\x69\xd8\x1c\x70\xd3\xd0\x65\x29\x4f\x4e\xa6\x89\xc8\xd6\xf6\x74\xcd\xe8\x12\x52\x46\x94\x8a\xbd\xbd\x43\xc4\x66\x1f\x3b\x13\x4c\xd2\x41\x28\x6f\x86\x76\xc6\xa4\x58\x79\x60\x19\xc5\x9e\x13\xc2\x77\xe8\x99\xc0\xc8\x88\x57\x2f\xd9\xa3\xc7\x7c\xb6\xf0\x47\xe3\x66\xf0\x64\x9a\x8f\x1a\x22\x1a\xef\xb4\x6f\x4f\xa0\xf6\xec\x31\x07\x37\xdd\xcd\x60\xf2\x51\x43\x37\xcc\xe8\xb2\x16\xab\xf3\xb8\x27\xe1\xc3\x42\x5c\x43\xfd\x20\xe6\x73\x85\xda\xef\xc8\xd4\x99\x4c\x79\x59\x69\xdf\x78\x4c\xd9\x8e\x9f\x4c\x6d\x2f\xd0\x2c\xf6\x2a\xc9\xbc\x3a\x57\xb3\x8f\xda\x80\xca\x6e\xc5\x6b\x48\x18\xdc\xfa\x46\x93\x52\x30\x0f\x4a\x46\x52\xcc\x05\xcb\x50\xc6\xde\x5b\x91\x52\xc2\x80\xa3\x5e\x09\x79\x0b\x3f\xff\xf4\x5f\x50\xab\x9c\xf2\x05\xac\x45\x25\xe1\x3f\xc5\x8a\x30\x02\x24\xcb\x0c\xd8\x82\x20\xe8\x88\x61\x91\x77\x28\xa8\x9f\x68\xbe\x9d\x75\x32\x4d\x2a\xad\x45\x3b\x31\xd1\x1c\x12\xcd\xfd\x0c\xe7\xa4\x62\x1a\x32\x29\xca\x4c\xac\xb8\xaf\xc5\x62\x61\x92\x52\xb7\x05\xb7\xc8\x83\x8c\x68\x52\x0f\xc5\x5e\x33\xd7\x03\x22\x29\xf1\x73\xa2\x4a\x51\x56\x65\xec\x69\x59\x61\xdd\x89\x77\x25\xe1\x19\x66\xb1\x37\x27\x4c\xa1\x37\xfb\x96\x2e\x11\x0a\x04\x6b\xc6\x93\x29\x6d\xf5\x42\x60\x4e\xfc\x94\x48\xd4\x7e\x97\x28\xcd\x32\xe4\x35\x49\x6b\xff\x69\xe8\x84\x71\x5b\x82\xfa\x6f\x5a\xb1\x86\x52\xbb\x85\x02\x79\x05\x3b\x2d\x5f\x9a\x30\xe3\xcd\xee\xef\x25\xe1\x0b\x84\x67\x34\xbb\x1b\xc2\x33\x52\x88\x8a\x6b\x98\xc4\x10\xbc\xb2\x8f\x6a\xb3\xd9\xa1\x0e\x30\x65\x74\x36\x25\x8f\x81\x13\x04\x4f\x19\x4d\x6f\x63\x4f\x53\x94\xf1\xfd\xbd\x21\xbe\xd9\xdc\xc0\xfd\x3d\x9d\xc3\xb3\xe0\x27\x4c\x49\xa9\xd3\x9c\x6c\x36\x0b\xd9\x3c\x07\x78\x87\x69\xa5\xb1\x3f\xb8\xbf\x47\xa6\x70\xb3\x51\x55\x52\x50\xdd\x6f\x96\x9b\x7e\x9e\x6d\x36\x46\xe6\x5a\xce\xcd\x06\x42\x43\x94\x67\x78\x07\xcf\x82\x1f\x51\x52\x91\x29\x70\xf3\xa7\x21\x99\x4d\x43\x46\x67\xf5\xba\x5d\x25\x85\x15\xdb\xe2\x25\x34\x80\x69\x51\x6e\x9d\xc6\x8a\xda\x95\xf4\x88\x0f\x2c\xfc\x56\xfa\x1a\x0f\x8a\x6a\xbc\xc5\x75\xec\xdd\xdf\x77\xd7\xd6\xa3\x29\x61\xcc\xc4\x99\xd8\x73\x5b\x6b\x17\x7d\x40\x83\xd3\x25\x55\xf6\xf6\x33\x6b\x24\xd8\x8a\xfd\x89\x4e\xbd\x77\xec\x68\x51\x4e\xe0\x7c\xfc\xc8\x99\xa3\x0a\xff\xdc\x9b\xed\x43\x4f\x9a\xfb\xc2\x03\x98\x03\xe7\x5c\xc6\xc5\x4b\x44\xe9\x52\x48\xa3\x3d\xb0\xcd\x8e\x70\x9f\xc8\xcc\xa8\x20\x21\x0a\x3f\x85\xa3\x8d\x12\x5b\x8e\xb6\xf9\x05\x2c\x73\x24\x52\x27\x48\xf4\xa7\xf0\x9c\x57\x3c\xeb\xec\xd2\x38\xeb\xe7\x73\xac\x38\x5d\xa2\x54\x54\xaf\x3f\x95\x25\x66\x5b\x9e\xae\xfd\x2f\x82\xc0\x7e\xd8\x39\x9f\xfd\xbb\x58\x41\x26\x50\x81\xce\xa9\x02\x73\x00\xbf\x9c\x86\xf9\x79\x3b\xa5\x9c\xbd\x33\x03\xf6\xd8\x9a\xdb\xe8\x03\x54\x81\xac\xb8\x3d\x9c\x05\x07\x9d\x23\xdc\xdf\x07\xdf\xbb\xd3\x7b\xb3\x69\xce\xf1\x00\xde\x09\x13\xb5\x97\xc8\x35\x14\x84\xd1\x94\x8a\x4a\x01\x49\xb5\x90\x0a\xe6\x52\x14\x80\x77\x39\xa9\x94\x36\x84\x08\x63\x40\x96\x84\x32\x92\x30\xb4\x3a\x50\x20\x24\x90\x34\xad\x8a\xca\x64\x1d\x7c\x01\xc8\x45\xb5\xc8\x9d\x28\x5a\x80\x3b\xbc\x98\xe0\x8b\x56\x1c\x55\x92\x02\x88\xd6\x24\xbd\x55\x43\x90\xf8\x5b\x85\x4a\x2b\x20\x12\x41\x53\xcc\xcc\xaa\x54\x14\x85\xe0\x70\x2e\x33\x28\x89\xd4\x6b\x50\xbb\xd1\x87\xa4\xa9\x3d\x09\x03\x78\xc5\xd7\x82\x23\xe4\x64\x69\x05\x84\x77\xee\x2a\x37\x84\x6f\xed\x65\xf9\xcc\xc8\xf7\x37\x92\x62\x22\x44\xbb\x0c\x0a\xb2\x6e\xf8\xd6\xbb\x58\x51\x9d\x53\xa7\xa6\x12\x65\x61\x68\x64\xc0\x68\x41\xb5\x0a\xa6\x61\xb9\x0d\xb7\xdb\x83\x9c\xf9\xb9\x90\xf4\x83\x89\x81\xec\xa8\x8d\xc7\x51\xc7\xc6\x66\xad\x6e\x66\xd5\xf9\x14\xa9\xb4\xb8\xa9\xb3\x22\x9f\xe1\xdc\xde\x9c\xec\x9a\x7d\xb0\xd6\x17\xd4\x63\x48\x6d\x68\xda\x9b\x8a\x39\xb7\x26\x70\xee\x72\x1a\x17\x8f\x32\xdd\x91\x20\xdb\x93\xd3\x31\xbd\xbe\x2e\xef\x5a\x39\x9a\xc4\xa8\x96\xde\xfa\xc1\x3b\xb1\xa7\xae\x25\xed\x68\xba\x20\xb7\x08\x04\xa6\x64\xaf\x68\x51\x0b\x6d\xaf\xbf\xd4\x56\x84\x42\xbd\x42\xd4\x2f\x4d\x80\x8a\x7f\x72\x04\x29\x5f\x9c\x8e\x23\x87\x59\xf3\x60\xc8\x9f\x8e\x23\xca\xb5\x38\x1d\x47\xd1\x5d\xf4\x89\x7f\xa7\xe3\x48\xf0\xd3\x71\xa4\x73\x3c\x1d\x47\xa7\xe3\xf3\x2e\xda\x5d\x8f\x4b\x4f\xcc\x1c\x54\x86\x57\xe3\x02\x1e\x68\x22\x17\xa8\x63\xef\x7f\x48\x22\x2a\x3d\x49\x18\xe1\xb7\xde\xcc\x0a\x6b\x42\x96\x45\xc7\xb1\x14\x07\x4a\xa2\x0c\x50\x8c\xb4\x16\x3b\x75\xe5\x4b\x41\x5f\x55\xd2\x5e\x5d\x0c\x2a\xcd\x7e\xad\xfb\xf2\x9e\xc1\x9e\x51\xca\x20\x98\x26\x32\x9c\xd9\x9f\xd7\xa2\x5c\xfb\x96\x92\xa5\x71\xa0\x47\x55\x95\xe6\xe2\x11\x74\xf5\x49\x4c\x36\xcc\x50\x85\xd7\xd1\xe5\xf5\xd5\xa3\x3b\x50\x26\x57\xb3\xdb\x68\xc5\x24\x89\x58\x22\xb8\xcc\x30\x11\x77\x40\x78\x06\x73\x2a\x11\xc8\x8a\xac\x9f\x4e\xc3\xcc\xe6\xe1\x5f\x0f\x5b\x57\xb0\xf2\x4b\x56\x29\x93\xba\x52\xe3\xc3\x7f\x28\x0c\xbb\x43\x02\x7e\x64\x95\x1a\x42\x59\x25\x8c\xaa\x1c\x08\x70\x5c\xc1\x54\x69\x29\xf8\x62\x66\x7b\x53\x73\x4f\xb1\x4d\x28\x85\xd2\x0f\x03\x02\x8b\x04\xb3\xec\x08\x24\xbe\x06\x11\x86\xa5\xb5\xe2\xff\xbd\x05\xe7\xf5\xd1\xf9\x87\xb2\x5a\x73\x9e\xff\x81\x4d\x76\xe0\xc4\xab\xd5\x2a\x68\x94\x69\x3d\x38\x47\x56\x86\x26\xce\x55\x9c\xea\x75\xe8\x0e\x43\xc1\xc3\x97\x34\x8b\xc7\xd7\xe3\xab\xab\xf1\xc5\x8b\xeb\xcb\xcb\xf1\xf5\xc5\xe5\x43\xee\xdd\xe2\xe2\xcb\xbd\xdb\xe5\xd4\xdf\x8b\x57\x95\xce\xdb\x84\xda\x41\xa6\xc6\x81\xbd\x4d\x64\xe6\x42\x22\xbd\x2f\x86\x51\xc5\x4d\x5e\xe8\x13\x76\x34\xbf\xfb\x0c\x20\x59\x24\x3d\x22\xd9\xc7\xd1\x35\x7a\x0c\x5d\x0d\x82\x0c\x58\x44\xa5\xcd\x0e\x73\xe4\x9a\xa6\xc4\xd8\xa6\x45\xd4\x10\x14\x2d\x4a\xb6\x86\x74\x6b\xf5\x63\xd0\x7a\xd0\x24\x1f\x45\xd6\xae\xd1\x1c\xce\x6c\x8a\x57\x88\x0c\x4d\x6e\xa7\x2a\x95\x62\x69\xdf\xcd\x98\x84\xe9\x2f\xeb\x0f\x84\x6b\xca\xb1\x49\xac\x02\xf8\x81\xb3\x35\x54\x0a\x61\x2e\x24\x64\x98\x54\x8b\x85\x4d\x06\x25\x94\x92\x2e\x89\xc6\x26\x9b\x52\x35\x26\x5a\x48\x74\x2e\x39\x26\xaf\x65\x9d\x34\xf3\x1f\xa2\x82\x94\x70\xd0\x92\xa4\xb7\xce\x59\x2a\x29\x8d\xb3\x94\xe8\x76\xd3\xe6\x73\x09\x32\xb1\xb2\x53\xdc\xbe\xe7\x14\x99\x4d\xee\x14\x22\xe4\x62\x05\x45\x95\x5a\x8f\x34\xc9\x9b\xdd\xc4\x8a\x50\x0d\x15\xd7\x94\x39\x6d\xea\x4a\x72\x93\x0a\xe2\x4e\x0e\x76\x70\x0d\x9c\x62\x31\x7b\x97\xe3\x91\xc4\xb7\xbd\xc0\x81\xc4\xd7\x6e\x3a\x94\x52\x68\x4c\x8d\x39\x81\x2c\x08\xe5\xca\x58\xc4\x66\x79\x58\x7c\xc2\x05\xaf\x7d\xaa\x1f\xb6\x2f\x01\xec\x70\x18\xc2\xb7\x4c\x24\x84\xc1\xd2\xe0\x3c\x61\x26\x67\x17\x90\x0b\xb3\xf5\x8e\xb6\x94\x26\xba\x52\x20\xe6\xb6\xd7\x49\x6e\xd6\x2f\x89\x34\x16\xc4\xa2\xd4\x10\xd7\x85\x32\xd3\xa7\x50\x2e\xeb\x02\xb7\x69\x9a\x4b\xfc\xce\x78\xab\xf5\x18\x7e\xf9\xf5\xe6\x49\x2d\xca\x37\x38\xb7\x90\x30\xe8\x76\x5b\xd6\x39\xd1\x90\x4a\x24\x1a\x15\xa4\x4c\xa8\x4a\x3a\x09\x33\x29\x4a\x30\x52\x36\x94\x1a\xca\x66\xa0\xb4\xdc\x1a\x22\xfd\x9c\xa8\x7c\x50\xd7\xf9\x24\x5a\x2b\xb5\x63\x4d\xff\x89\x41\x5d\xdf\x10\xa0\x71\x74\x03\x74\xda\xd0\x0d\x18\xf2\x85\xce\x6f\x80\x9e\x9d\xb5\x93\x4f\xe8\x1c\xfa\xcd\x8c\x5f\xe8\xaf\x81\xbe\x0b\x0c\x17\x88\x63\xe8\x72\xb3\x0c\x6b\x3a\xaa\x64\x34\xc5\x3e\x1d\xc2\xc8\xd5\x45\xcd\x5f\x22\x91\xdc\x36\xad\xda\x8e\xee\x9f\xfd\xdd\xdc\xec\x6a\xc6\x2a\x7f\x47\x37\xae\x0c\xa0\x80\xc0\x82\x2a\x0d\x95\x64\x50\xfb\xb0\x33\x41\x6b\x10\x3b\xaf\xab\x95\x03\x5c\xd6\x0f\x35\xa6\x9a\x2d\x38\x32\x81\x42\x9e\xf5\xff\xe3\xed\x0f\xdf\x07\x4a\x4b\xca\x17\x74\xbe\xee\xdf\x57\x92\x4d\xe0\x59\xdf\xfb\x53\x25\x99\x37\xf8\x25\xfa\x35\x58\x12\x56\xe1\xd0\xda\x7b\x62\x7f\x0f\xb8\x0c\xa1\x7e\x9c\xc0\x2e\xc3\xcd\x60\x70\x73\xbc\x64\xd2\xa9\xf0\x48\x54\xa8\xfb\x66\x62\x0b\xfc\x7d\x1d\x11\x28\x50\xe7\xc2\xba\xae\xc4\x54\x70\x8e\xa9\x86\xaa\x14\xbc\x56\x09\x30\xa1\xd4\x16\x88\xcd\x8c\xf8\x10\x14\xf5\xfc\xd8\x46\xeb\xff\xc6\xe4\xad\x48\x6f\x51\xf7\xfb\xfd\x15\xe5\x99\x58\x05\x4c\xb8\x83\x36\x30\x4e\x2a\x52\xc1\x20\x8e\x63\xa8\x63\xa8\x37\x80\x97\xe0\xad\x94\x89\xa6\x1e\x4c\xcc\xa3\x79\x1a\xc0\x19\xec\x2f\xcf\x4d\xc0\x3f\x03\x2f\x24\x25\xf5\x06\xce\x1d\x1a\xc5\x0b\x5e\xa0\x52\x64\x81\x5d\x01\xed\xfd\xb7\x05\x99\xd9\x47\xa1\x16\x10\x83\x35\x50\x49\xa4\x42\x37\x25\xc8\x88\x26\x0d\xda\x0c\x66\xed\xb4\x38\x06\x5e\x31\xb6\x05\xa9\x73\x8a\x9b\x06\x7e\x3b\xd3\x03\x17\x69\x9e\xc6\x31\x54\x3c\xb3\x2a\xce\xb6\x2b\x8d\xf1\x5d\x79\x63\x10\x98\xb8\xd0\xb7\xcc\xdf\x70\xbd\x5d\x3a\x18\xdc\x74\x71\xbd\x43\x17\xb3\x8f\x11\xc6\xac\xa1\xbc\x5d\xf3\x00\x41\x5b\x3d\x7a\x8c\x9e\xab\x36\x75\xc8\xd9\x8e\x07\xa8\xf1\xaa\x48\x50\x3e\x46\xce\x95\x92\x8e\xed\xdb\xad\x1d\xc2\xe8\xea\xa1\xcd\xa3\x94\xe2\x41\xe2\x5c\xe8\x75\xff\x9e\x91\xb5\xc9\x9d\xa0\xa7\x45\xf9\xda\x96\x45\x7b\x43\x1b\x7b\x27\xd0\x52\x18\xda\x8a\xf2\x04\x7a\xb6\x65\xc6\x69\x81\x76\xd5\x65\x14\x45\x43\x68\x5e\xa4\xfc\x85\x18\x77\x94\x15\x6e\x1e\x90\x47\x55\x69\x6a\x32\x80\xaf\x91\xa8\xa6\xd1\xca\x54\xb7\xbf\x42\xaa\x36\x4a\xec\x88\x05\x7f\xfe\x33\x1c\x8c\xee\x02\x3a\x0c\xe1\x3b\x22\x6f\x6d\x01\xa8\x94\xb8\xb4\x45\xa2\x76\x7e\x41\x95\xb2\xd5\x17\x05\x99\xe0\x58\xaf\xf9\xbc\x00\x70\x20\x63\x3d\x0d\x66\x10\xed\x0b\x68\x0e\xc6\x4e\x80\x38\x12\x37\x3a\x74\x77\x43\xc2\xc9\xa6\xcb\x6f\x67\x25\x2d\x10\x9e\xc6\xe0\x79\xdd\xc5\x07\x33\xcc\x84\x96\xd8\x89\x42\xfd\xce\xd9\xa2\x5f\xc7\xc9\x63\x51\x6c\x30\x84\xf3\x28\x8a\x06\x07\x42\x6c\xb6\xea\x7d\x55\x9a\x04\x0a\x08\x5f\xdb\xc3\xb1\xd5\xad\x4d\x21\x4d\x32\x64\x0e\x37\x06\xa9\x60\xcc\x65\x2f\xf5\x52\xa3\xe0\xba\x5a\x16\x83\x3f\xba\x39\x12\x4f\x3b\x9a\xec\x6c\x6d\xdf\x3c\x47\x74\xbf\x6f\xa2\x5d\x9d\xed\x4d\xf6\x47\x3b\x46\xd9\xb1\xd7\x71\xc3\x9c\xb4\x72\xd3\xad\x46\xf7\xcc\xb5\xb5\xd7\xbe\xce\x3a\xf2\x3b\x3a\x67\xa3\x4f\xdc\x46\x3b\x5c\x56\x2a\xef\xef\x09\x3a\xb8\x39\xb4\xcd\x1b\x8d\xd2\xe4\xcb\xc2\x04\x2f\x63\x0b\x73\x25\x90\x78\x60\x12\x9b\xb4\x4b\xf4\x25\xf2\x0c\x65\x93\x5c\xb8\x1c\xdf\xa4\x82\x3b\x26\x73\x57\xcc\x2e\x9c\x3e\xd3\x61\x6c\x72\x26\x38\x02\x00\xec\x39\x81\x05\xea\x0e\x52\xcd\x64\x64\xa4\x54\x98\x41\x0c\xee\x8b\x93\xfe\x20\xa8\x38\xbd\xeb\x0f\xfc\xba\xbd\x4f\xa3\x19\xbf\x69\xaf\x8b\x8d\xd8\x67\x31\x78\x53\x2d\x81\x66\x71\xcf\x83\xb3\x63\x2e\x68\xe2\x6f\x6f\xb6\x95\xa0\xbb\x14\x60\xaa\xb3\x99\x2d\x7b\xbb\x7b\xdb\x3f\xbd\xee\xcb\xfe\x4a\xb2\xfe\x01\x59\xb2\x24\x9a\x48\x4b\x75\x70\xd3\xf9\x36\xa0\xbe\x30\xa6\xc6\x38\x37\xe0\x6e\xa6\xb6\xba\x0e\xcd\x77\x24\xae\x95\x08\x99\xa1\xf4\x25\xc9\x68\xa5\x26\x70\x51\xde\xdd\xfc\xb3\x79\xaf\x33\x0d\x75\xf6\xb8\xa8\xa5\xc4\xd9\x81\x44\x75\x35\xf9\x0c\xbc\x69\x68\x26\x7c\x8c\x4c\xbb\xd9\xee\xfb\x74\x38\xf2\xba\x0e\xda\xb7\xdd\x75\x7f\x41\xb3\x8c\xa1\x11\x78\x4b\xde\x38\xa3\xb1\x7f\xd7\xa5\x76\x59\x42\xfd\x9a\x62\xbb\x66\x03\xc8\x14\x3e\xb2\xa0\x7d\xe3\xd1\x33\x00\xf0\xcd\x96\xa9\xd5\x79\x7d\xe9\xb6\xdd\xb2\x67\x75\x51\x7f\xb7\x94\x55\xd2\x66\x5d\x7d\xbf\x06\xd8\x10\x7a\xca\x64\x81\x99\xea\x0d\x82\xbc\x2a\x08\xa7\x1f\xb0\x6f\xe2\xd2\xc0\xe9\xca\xbe\x42\xf1\x0e\x8f\xe4\x03\x61\xb6\xef\x45\x7a\x4d\x8c\xeb\xd5\x4a\xec\x35\xd6\xbd\xd8\xde\xf1\x27\x10\xdd\xf4\x3e\x53\x43\xc7\xb9\xf8\x09\x91\xd0\x6d\xf8\x4d\xf0\x05\x29\x0c\xf7\x66\x2c\x21\xb2\xe7\x2a\x1a\x36\x53\xe7\x62\x15\xf7\xce\xa3\x56\x48\x67\x68\x6b\xe7\x5e\x8d\xb5\x03\x63\x18\x29\x1b\xd7\x9c\xc1\x79\xf4\x7b\x48\xeb\xaa\x22\x7b\x3b\xd0\x92\x96\x98\x01\x49\x35\x5d\xe2\xbf\x60\x23\xbf\x83\x92\x3f\x5b\x44\x83\xc3\x46\x79\x16\xa6\x3b\xf2\x9a\xd1\x56\xb7\xff\x66\xfc\x0d\x42\xab\xe1\x33\xf0\x8e\x6e\xe4\x41\x24\xee\x4d\xdc\x73\xed\x87\xfd\x7e\x1a\x6a\xb9\x1d\xda\x74\xb2\xdd\xe6\x24\xf1\x06\x41\xae\x0b\xd6\xf7\xa6\xda\x7e\xf7\x62\x64\x6e\x29\x58\x02\xae\x7b\x37\xa5\xdb\xec\x5e\x69\xcc\x4d\x1e\xf7\x6e\x5c\xd0\x49\x4e\xda\x5b\x59\x93\x89\xc0\x66\xfb\x79\x50\x18\xc2\x5b\x4d\xa4\x06\x02\x3f\xbf\x81\xaa\xcc\x88\x36\xd1\x4b\x80\x89\x8f\xae\x00\xdd\x7c\x3f\x94\x10\xa9\x60\x2e\xe4\x8a\xc8\xac\xae\xd4\xe8\x1c\xd7\xf6\xdd\x5d\x93\xfa\x29\xd4\x6f\xcc\x29\xb6\x24\xac\x7f\x70\x03\x7c\xd6\xef\x05\x5d\x93\xf7\x06\x01\x92\x34\x3f\x9c\x68\x23\x56\xcb\x37\x86\xef\xed\x15\xa0\xff\xac\xaf\x73\xaa\x06\x01\xd1\x5a\xf6\x7b\x3b\x60\xe8\x0d\x8c\x5d\x47\x9d\xcb\x59\xbb\x7c\xba\xe3\x56\x8f\xd1\xd8\x26\xd3\x6d\x22\xd0\x4c\x4f\x95\xea\x3b\x5c\xf5\x86\x1d\xda\xbb\xb0\xea\x9d\xf6\x5a\x43\x6d\xdd\x7b\xbb\x8f\xf8\xa8\x24\x3b\xa4\x7b\xc6\xcb\x7a\x07\xec\x49\x96\xbd\x36\xfe\xd3\xf7\x8e\x78\xfa\x3e\x3a\x06\xad\xb2\xdd\x79\xfd\xa8\x96\xdd\xb7\x1a\x0f\xa8\x98\x66\xbd\x41\xa0\xaa\xc4\x55\x29\xfa\x97\xed\x05\xac\x99\x66\xc1\xbb\x1f\x0a\x0e\x12\x0a\xc3\x62\x37\xa9\xf0\xf7\x92\x90\x47\xa2\x46\xcd\xd2\xed\x6a\x33\x34\x0a\x8f\x06\x6d\x91\xeb\xaf\xca\x24\x57\xee\x2d\xc0\x0a\x13\x65\x6b\x0a\x50\xe3\xdd\xd6\x75\x5c\xfd\xe6\xd5\x8f\x6f\x3a\x35\x9c\xd6\x23\xfa\x96\x7a\xfb\xd1\xed\xb1\x8a\xc9\xd1\xaf\x7c\x57\xab\x55\xfd\x41\xb6\x2d\xe7\xb7\x25\x95\x90\x94\x34\x78\xaf\x3c\x20\x6a\xcd\x53\xc8\x70\x8e\x72\xd6\x21\x5f\xd7\x59\xa6\xa1\xfb\xca\x6d\x1a\xba\xaf\xf6\xff\x37\x00\x00\xff\xff\xae\x9d\x04\x99\xc6\x2f\x00\x00")

func faucetHtmlBytes() ([]byte, error) {
	return bindataRead(
		_faucetHtml,
		"faucet.html",
	)
}

func faucetHtml() (*asset, error) {
	bytes, err := faucetHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "faucet.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"faucet.html": faucetHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"faucet.html": {faucetHtml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

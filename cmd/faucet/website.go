// Code generated by go-bindata.
// sources:
// faucet.html
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _faucetHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x7b\xfb\x93\xdb\x36\x92\xff\xcf\xe3\xbf\xa2\xc3\xb5\x57\xd2\xd7\xe2\x43\x9a\x87\xc7\x1a\x51\x29\xaf\x93\xcd\xd7\x77\x97\x47\x25\x4e\xdd\x6e\x65\x53\x57\x10\xd1\x12\xe1\x01\x01\x06\x00\xa5\x51\xa6\xf4\xbf\x5f\x01\x20\x29\xea\x31\x63\x3b\xf6\xdd\x65\x7e\x90\x89\x57\x77\xa3\xfb\xd3\xe8\x46\x93\x9e\x7e\xf1\xd5\xf7\xaf\xdf\xfe\xf3\x87\xaf\x21\x37\x05\x9f\x3d\x99\xda\x7f\x80\x13\xb1\x4c\x03\x14\xc1\xec\xc9\xd9\x34\x47\x42\x67\x4f\xce\xce\xa6\x05\x1a\x02\x59\x4e\x94\x46\x93\x06\x95\x59\x84\xd7\xc1\x6e\x20\x37\xa6\x0c\xf1\xb7\x8a\xad\xd2\xe0\x1f\xe1\xcf\xaf\xc2\xd7\xb2\x28\x89\x61\x73\x8e\x01\x64\x52\x18\x14\x26\x0d\xde\x7c\x9d\x22\x5d\x62\x67\x9d\x20\x05\xa6\xc1\x8a\xe1\xba\x94\xca\x74\xa6\xae\x19\x35\x79\x4a\x71\xc5\x32\x0c\x5d\x63\x08\x4c\x30\xc3\x08\x0f\x75\x46\x38\xa6\xa3\x60\xf6\xc4\xd2\x31\xcc\x70\x9c\xdd\xdf\x47\xdf\xa1\x59\x4b\x75\xbb\xdd\x4e\xe0\x55\x65\x72\x14\x86\x65\xc4\x20\x85\xbf\x93\x2a\x43\x33\x8d\xfd\x4c\xb7\x88\x33\x71\x0b\xb9\xc2\x45\x1a\x58\xd1\xf5\x24\x8e\x33\x2a\xde\xe9\x28\xe3\xb2\xa2\x0b\x4e\x14\x46\x99\x2c\x62\xf2\x8e\xdc\xc5\x9c\xcd\x75\x6c\xd6\xcc\x18\x54\xe1\x5c\x4a\xa3\x8d\x22\x65\x7c\x1e\x9d\x47\x2f\xe2\x4c\xeb\xb8\xed\x8b\x0a\x26\xa2\x4c\xeb\x00\x14\xf2\x34\xd0\x66\xc3\x51\xe7\x88\x26\x80\x78\xf6\xc7\xf8\x2e\xa4\x30\x21\x59\xa3\x96\x05\xc6\x17\xd1\x8b\x28\x71\x2c\xbb\xdd\x7f\x84\xab\x5d\xaf\xa3\xa5\x94\x4b\x8e\xa4\x64\xda\x71\xcd\xb4\xfe\x72\x41\x0a\xc6\x37\xe9\xb7\x76\x1c\x95\x22\x66\x32\x4e\x92\xe1\x79\x92\x0c\x2f\x92\x64\x78\x99\x24\xc3\xab\x24\x39\xcd\xc9\xb2\xd2\x99\x62\xa5\x01\xad\xb2\x0f\xde\xe1\xbb\xdf\x2a\x54\x9b\xf8\x3c\x1a\x45\xa3\xba\xe1\x76\xf4\x4e\x07\xb3\x69\xec\x09\xce\x3e\x89\x76\x28\xa4\xd9\xc4\xe3\xe8\x22\x1a\xc5\x25\xc9\x6e\xc9\x12\x69\xc3\xc9\x0e\x45\x4d\xe7\x67\xe3\xfb\x10\x5a\xde\x1d\x82\xe5\x73\x30\x2b\x64\x81\xc2\x44\xef\x74\x3c\x8e\x46\xd7\x51\xd2\x74\x1c\xd3\x77\x0c\xac\xd1\x2c\xab\xb3\x7c\x34\x84\x7c\x3c\x84\xfc\x1c\xee\x6d\xfb\xcc\x81\xca\x03\x60\x02\x3b\x04\xdc\xec\x06\xd7\xc8\x96\xb9\x99\xc0\x38\x49\x5c\xef\xd6\xfe\x10\xbf\x3a\x93\x5c\xaa\x09\xfc\x65\xb4\x48\xce\xcf\xe9\x89\x45\x17\x7b\x8b\x26\xb9\x5c\xa1\xda\x5f\x7a\x39\x1a\xd1\xeb\xd1\xfb\x96\x46\x2b\x54\xd6\xb7\x79\x98\xa1\x30\xa8\x6a\xe9\x0b\x26\xc2\xbc\x9e\x3f\x4a\x92\x67\x37\xa7\x7a\x57\xb9\xef\xa6\x4c\x97\x9c\x6c\x26\xb0\xe0\x78\xe7\xbb\x08\x67\x4b\x11\x32\x83\x85\x9e\x80\xa7\xec\x07\xe6\x24\xbb\x5d\x2a\x59\x09\x1a\x9e\xda\x63\xd3\xb7\x58\x2c\x6e\xfe\xa0\x1a\x3b\x2c\xac\x16\xce\x47\xd9\xf5\x25\x7c\xc1\x0a\x7b\x28\x12\xe1\x57\x02\x74\x27\x85\x85\xfc\x3d\xe4\x4c\x20\x51\xe1\x52\x11\xca\x50\x98\xbe\x91\xe5\xb0\x5d\x9e\x3c\xb3\xcf\x2f\x46\xf3\xeb\x0b\x18\x5d\xd8\xc6\xd5\xc5\xe8\xe5\x75\x02\xe7\x6e\xe4\x05\x19\x5d\xbe\x20\x70\x71\x65\x1b\x2f\xaf\x47\xc9\x8b\x11\x5c\x8d\x6d\x63\x8e\x09\xb9\xba\x84\x17\x2f\x6d\x03\x69\x32\xbe\xbc\x86\x97\x6e\xda\xe2\x65\x92\x5c\x5e\x38\xe5\x0e\xde\x23\xde\x1a\xe7\xb7\xcc\xfc\x89\x25\x3c\x96\x0c\xe6\xd2\x18\x59\xfc\x1f\xca\xb7\x60\xdc\xa0\x9a\x40\xa9\xe4\x92\xd1\xc9\x57\xff\x78\x53\x90\x25\xbe\x55\x44\xe8\x85\x54\x45\xf4\x2d\xcb\x94\xd4\x72\x61\xa2\x56\x6c\xd0\x86\x28\xf3\xda\x42\x50\x1b\x95\xf6\x6a\xd9\x7b\x43\x40\x41\x3b\xdd\x9e\x71\x6f\xf8\x4d\xbd\xf0\xed\xa6\xc4\x34\x81\x41\xc7\xab\x2c\x57\x85\x5a\xd7\xee\x54\x4a\xcd\x0c\x93\x62\x62\xcf\x7a\x62\xd8\x0a\x4f\xcd\xd5\x25\x11\x47\x0b\xc8\x5c\x4b\x5e\x19\x3c\x70\xb5\x39\x97\xd9\xad\xef\x73\x11\xbd\xeb\xa6\xb5\x13\xad\x73\x56\x2f\x03\xc7\x08\x4a\x85\x35\x79\x28\x09\xa5\x4c\x2c\x27\x70\x55\xd6\x1e\x0b\x05\x51\x4b\x26\x26\x90\xec\x96\x4c\xe3\xe6\x80\x9b\xc6\x3e\x79\x79\x72\x36\x9d\x4b\xba\x71\xa7\x2b\x65\x2b\xc8\x38\xd1\x3a\x0d\x0e\x0e\x11\x97\x94\xec\x4d\xb0\xb9\x08\x61\xa2\x19\xda\x1b\x53\x72\x1d\x80\x63\x94\x06\x5e\x88\xd0\xa3\x67\x02\x23\x2b\x5e\xbd\xe4\x80\x1e\x0f\xf9\x32\x1c\x8d\x9b\xc1\xb3\x69\x3e\x6a\x88\x18\xbc\x33\xa1\x3b\x81\xda\xb3\x27\x98\x4d\x59\xb3\x76\x41\x60\x41\xc2\x39\x31\x79\x00\x44\x31\x12\xe6\x8c\x52\x14\x69\x60\x54\x85\xf6\x84\x67\x33\xe8\xa6\x40\x0f\x64\x40\xf9\xa8\x91\x2b\xa6\x6c\x55\x6f\xab\xf3\x78\xb0\xc3\x87\x37\x71\x0d\xf5\x83\x5c\x2c\x34\x9a\xb0\xb3\xa7\xce\x64\x26\xca\xca\x84\xd6\xe3\xca\x76\xfc\x6c\xea\x7a\x81\xd1\x34\xa8\x14\x0f\xea\x14\xd0\x3d\x1a\x0b\x4a\xa7\x8a\xa0\xdd\xb8\x54\x45\x68\x2d\xa1\x24\x0f\xa0\xe4\x24\xc3\x5c\x72\x8a\x2a\x0d\x7e\x92\x19\x23\x1c\x84\xdf\x33\xfc\xfc\xe3\x7f\x40\x6d\x32\x26\x96\xb0\x91\x95\x82\x7f\x97\x6b\xc2\x09\x10\x4a\x2d\x58\xa3\x28\xea\x88\xe1\x90\x7b\x2c\x68\x38\x37\x62\x37\xeb\x6c\x3a\xaf\x8c\x91\xed\xc4\xb9\x11\x30\x37\x22\xa4\xb8\x20\x15\x37\x40\x95\x2c\xa9\x5c\x8b\xd0\xc8\xe5\xd2\xe6\xba\x7e\x0b\x7e\x51\x00\x94\x18\x52\x0f\xa5\x41\x33\xb7\xb1\x20\xd1\xa5\x2c\xab\xb2\xb6\xa1\xef\xc4\xbb\x92\x08\x8a\xd4\x5a\x9c\x6b\x0c\x66\xdf\xb0\x15\x42\x81\x70\x9b\x49\x26\xe0\xec\x10\x11\x19\x51\x68\xc2\x2e\xd5\x23\x5c\x4c\x63\x2f\x8d\xdf\x13\xd4\x7f\xd3\x8a\x37\x94\xda\x3d\x14\x28\x2a\xd8\x6b\x85\xca\xc6\xa9\x60\x76\x7f\xaf\x88\x58\x22\x3c\x65\xf4\x6e\x08\x4f\x49\x21\x2b\x61\x60\x92\x42\xf4\xca\x3d\xea\xed\x76\x8f\x3a\xc0\x94\xb3\xd9\x94\x3c\x86\x6e\x90\x22\xe3\x2c\xbb\x4d\x03\xc3\x50\xa5\xf7\xf7\x96\xf8\x76\x7b\x03\xf7\xf7\x6c\x01\x4f\xa3\x1f\x31\x23\xa5\xc9\x72\xb2\xdd\x2e\x55\xf3\x1c\xe1\x1d\x66\x95\xc1\xfe\xe0\xfe\x1e\xb9\xc6\xed\x56\x57\xf3\x82\x99\x7e\xb3\xdc\xf6\x0b\xba\xdd\x5a\x99\x6b\x39\xb7\x5b\x88\x2d\x51\x41\xf1\x0e\x9e\x46\x3f\xa0\x62\x92\x6a\xf0\xf3\xa7\x31\x99\x4d\x63\xce\x66\xf5\xba\x7d\x25\xc5\x15\xdf\x01\x26\xb6\x88\x69\x61\xee\xbc\xc6\x89\xda\x95\xf4\x84\x13\x2c\xc3\x56\xfa\x1a\x10\x9a\x19\xbc\xc5\x4d\x1a\xdc\xdf\x77\xd7\xd6\xa3\x19\xe1\xdc\x06\xaa\x34\xf0\x5b\x6b\x17\xfd\x8e\x16\xa8\x2b\xa6\xdd\xad\x6a\xd6\x48\xb0\x13\xfb\x03\xbd\xfa\xe0\xdc\x32\xb2\x9c\xc0\xf9\xb8\x73\x68\x9d\x72\xf8\xab\x03\x87\x3f\x3f\x39\xb9\x24\x02\x39\xb8\xdf\x50\x17\x84\x37\xcf\xb5\xbb\x74\xbc\xef\x70\x51\x68\x8f\xe8\x56\xb4\xf6\xa8\x4f\x6e\xc0\x66\x89\x0b\x2e\xd7\x13\x20\x95\x91\x37\x50\x90\xbb\x36\xa1\x3b\x4f\x92\xae\xdc\xf6\x36\x48\xe6\x1c\xdd\xe1\xa2\xf0\xb7\x0a\xb5\xd1\xed\x51\xe2\x87\xdc\xaf\x3d\x51\x28\x0a\x8d\xf4\x40\x1b\x96\xa3\x55\xad\x9b\xd5\x31\x7d\xab\xcc\x93\xb2\x2f\xa4\x6c\x23\x48\x57\x8c\x9a\x74\x27\xd8\x05\xb3\xa9\x51\xbb\x79\x67\x53\x43\x3f\x2a\x02\x28\x7b\xcb\x7b\x28\x00\xf8\x23\xcd\xee\xbd\x44\x54\x3e\xf1\xb7\x90\x05\xd7\x9c\xc6\x86\x7e\x02\x67\x0b\xc2\x39\xd1\xf8\x21\xec\x5d\xa0\xdf\xb1\x77\xcd\x4f\xe5\x9f\x23\x51\x66\x8e\xc4\x7c\x88\x00\x8b\x4a\xd0\xce\xfe\xdd\xe1\xf9\x89\xfc\x2b\xc1\x56\xa8\x34\x33\x9b\x0f\x15\x00\xe9\x4e\x02\xdf\xde\x17\x61\x1a\x1b\xf5\x38\xd4\xba\x8d\xcf\xe4\xdb\xef\x4b\x48\xce\x67\xff\x5f\xae\x81\x4a\xd4\x60\x72\xa6\xc1\x86\xd6\x2f\xa7\x71\x7e\xde\x4e\x29\x67\x6f\xed\x80\x0f\x48\x0b\x97\x58\x00\xd3\xa0\x2a\xe1\xe2\xae\x14\x60\x72\xdc\x4f\x46\xea\x10\x1d\xc1\x5b\x69\x13\xba\x15\x0a\x03\x05\xe1\x2c\x63\xb2\xd2\x40\x32\x23\x95\x86\x85\x92\x05\xe0\x5d\x4e\x2a\x6d\x2c\x21\x7b\x7a\x90\x15\x61\xdc\xb9\x92\xb3\x28\x48\x05\x24\xcb\xaa\xa2\xb2\x09\xa9\x58\x02\x0a\x59\x2d\xf3\x5a\x16\x23\xc1\xc7\x25\x2e\xc5\xb2\x95\x47\x97\xa4\x00\x62\x0c\xc9\x6e\xf5\x10\x9a\x43\x01\x88\x42\x30\x0c\xa9\x5d\x95\xc9\xa2\x90\x02\xce\x15\x85\x92\x28\xb3\x01\xbd\x9f\x59\x90\x2c\x73\x41\x2e\x82\x57\x62\x23\x05\x42\x4e\x56\x4e\x42\x78\xeb\xaf\xf9\x43\xf8\xc6\x15\x52\x9e\x5b\x01\xff\x4e\x32\x9c\x4b\xd9\x2e\x83\x82\x6c\x1a\xbe\xf5\x36\xd6\xcc\xe4\xcc\xeb\xa9\x44\x55\x58\x1a\x14\x38\x2b\x98\xd1\xd1\x34\x2e\x77\x27\xeb\x2e\x46\xf3\x30\x97\x8a\xfd\x6e\xf3\x1b\x7e\xd2\xca\xe3\xfd\x93\x70\x4a\xcd\xc1\xf1\xd3\x9c\x9e\x6e\x09\xc7\x85\xbb\x55\xbb\x35\x87\x50\xaf\x8b\x17\xa7\x70\xde\xd0\x74\xb7\x58\x1b\x92\x26\x70\xee\xf3\x5d\x9f\x6a\x50\xd3\x91\x80\x1e\xc8\xe9\x99\x5e\x5f\x97\x77\xad\x1c\x6d\xd2\x9c\xb4\x44\x2c\x48\xf6\xd5\xb5\x62\x1d\x4d\x17\xe4\x16\x81\xc0\x94\x1c\x14\xb4\x6a\xa1\x5d\x69\x84\xb9\x22\x62\x6c\xd6\x88\xe6\x4b\xeb\xdd\xe9\x8f\x9e\x20\x13\xcb\x67\xe3\xc4\x83\xd6\x3e\x58\xf2\xcf\xc6\x09\x13\x46\x3e\x1b\x27\xc9\x5d\xf2\x81\x7f\xcf\xc6\x89\x14\xcf\xc6\x89\xc9\xf1\xd9\x38\x79\x36\x3e\xef\xc2\xdd\xf7\xf8\xd4\xd3\xce\x41\x6d\x79\x35\x3e\x10\x80\x21\x6a\x89\x26\x0d\xfe\x8b\xcc\x65\x65\x26\x73\x4e\xc4\x6d\x30\x73\xc2\xda\x6c\xc4\xa1\xe3\x54\xfa\x0a\x25\xd1\x16\x28\x56\x5a\x87\x9d\xba\x58\xaa\xa1\xaf\x2b\xe5\xae\xb5\x16\x95\x76\xbf\xce\x81\x45\xcf\x62\xcf\x2a\x65\x10\x4d\xe7\x2a\x9e\xb9\x9f\xd7\xb2\xdc\x84\x8e\x92\xa3\x71\xa4\x47\x5d\x95\xf6\x52\x1a\x75\xf5\x49\xec\x4d\x89\xa3\x8e\xaf\x93\xcb\xeb\xab\x47\x77\xa0\x6d\x1e\xee\xb6\xd1\x8a\x49\xe6\x72\x85\xe0\xb3\xfe\xb9\xbc\x03\x22\x28\x2c\x98\x42\x20\x6b\xb2\xf9\x62\x1a\x53\x77\x47\xfb\x74\xd8\xfa\x62\x66\x58\xf2\x4a\xdb\x2c\x85\x59\x1f\xfe\x53\x61\xd8\x1f\x12\xf0\x03\xaf\xf4\x10\xca\x6a\xce\x99\xce\x81\x80\xc0\x35\x4c\xb5\x51\x52\x2c\x67\xae\x37\xb3\x77\x58\xd7\x84\x52\x6a\xf3\x30\x20\xb0\x98\x23\xa5\x27\x20\xf1\x29\x88\xb0\x2c\x9d\x15\xff\xf7\x2d\xb8\xa8\x8f\xce\x3f\x95\xd5\x9a\xf3\xfc\x4f\x6c\xb2\x23\x27\x5e\xaf\xd7\x51\xa3\x4c\xe7\xc1\x39\xf2\x32\xb6\x71\xae\x12\xcc\x6c\x62\x7f\x18\x4a\x11\x7f\xc9\x68\x3a\xbe\x1e\x5f\x5d\x8d\x2f\x5e\x5e\x5f\x5e\x8e\xaf\x2f\x2e\x1f\x72\xef\x16\x17\x7f\xdc\xbb\xfd\x75\xe9\x3b\xf9\xaa\x32\x79\x7b\x57\xf2\x90\x69\x72\x74\x9b\x8a\x51\x7b\xd7\x54\xc1\x1f\x86\x51\x25\x6c\xc2\x19\x12\x7e\x32\x57\xfc\x08\x20\x39\x24\x3d\x22\xd9\x27\xa2\xab\x41\x90\x05\x8b\xac\x8c\xdd\x61\x53\xb3\x61\x52\xb4\x88\x1a\x82\x66\x45\xc9\x37\x90\xed\xac\x7e\x0a\x5a\x0f\x9a\xe4\xbd\xc8\xda\x37\x9a\xc7\x99\x4b\xf2\x0a\x49\xd1\x26\x77\xba\xd2\x19\x96\xee\x75\x9e\x4d\x98\xfe\xb6\xf9\x9d\x08\xc3\x04\x36\x89\x55\x04\xdf\x0b\xbe\x81\x4a\x23\x2c\xa4\x02\x8a\xf3\x6a\xb9\x74\xd9\xa0\x82\x52\xb1\x15\x31\xd8\x64\x53\xba\xc6\x44\x0b\x89\xce\xfd\xd5\x66\xb6\xbc\x93\x68\xfe\x53\x56\x90\x11\x01\x46\x91\xec\xd6\x3b\x4b\xa5\x94\x75\x96\x12\xfd\x6e\xda\x7c\x6e\x8e\x5c\xae\xdd\x14\xbf\xef\x05\x43\xee\x92\x3b\x8d\x08\xb9\x5c\x43\x51\x65\xce\x23\x6d\xf2\xe6\x36\xb1\x26\xcc\x40\x25\x0c\xe3\x5e\x9b\xa6\x52\xc2\xa6\x82\xb8\x97\x83\x1d\xdd\xf0\xa7\x58\xcc\xde\xe6\x78\x22\xf3\x6d\xef\xe6\xa0\xf0\xb5\x9f\x0e\xa5\x92\x06\x33\x6b\x4e\x20\x4b\xc2\x84\xb6\x16\x71\x59\x1e\x16\x1f\x70\x77\x6f\x9f\xea\x87\xdd\x0b\x22\x37\x1c\xc7\xf0\x0d\x97\x73\xc2\x61\x65\x71\x3e\xe7\x36\x6b\x97\x90\x4b\xbb\xf5\x8e\xb6\xb4\x21\xa6\xd2\x20\x17\xae\xd7\x4b\x6e\xd7\xaf\x88\xb2\x16\xc4\xa2\x34\x90\xd6\x45\x54\xdb\xa7\x51\xad\xea\x97\x1f\xb6\x69\x18\xaa\xbd\xf1\x56\xeb\x29\xfc\xf2\xeb\xcd\x93\x5a\x94\xaf\x70\xe1\x20\x61\xd1\xed\xb7\x6c\x72\x62\x20\x53\x48\x0c\x6a\xc8\xb8\xd4\x95\xf2\x12\x52\x25\x4b\xb0\x52\x36\x94\x1a\xca\x76\xa0\x74\xdc\x1a\x22\xfd\x9c\xe8\x7c\x50\xd7\x80\x15\x3a\x2b\xb5\x63\x4d\xff\x99\x45\x5d\xdf\x12\x60\x69\x72\x03\x6c\xda\xd0\x8d\x38\x8a\xa5\xc9\x6f\x80\x3d\x7f\xde\x4e\x3e\x63\x0b\xe8\x37\x33\x7e\x61\xbf\x46\xe6\x2e\xb2\x5c\x20\x4d\xa1\xcb\xcd\x31\xac\xe9\xe8\x92\xb3\x0c\xfb\x6c\x08\x23\x5f\x33\xb7\x7f\x73\x85\xe4\xb6\x69\xd5\x76\xf4\xff\xb8\xdf\xed\xcd\xbe\x66\x9c\xf2\xf7\x74\xe3\x2b\x3c\x1a\x08\x2c\x99\x36\x50\x29\x0e\xb5\x0f\x7b\x13\xb4\x06\x71\xf3\xba\x5a\x39\xc2\x65\xfd\x50\x63\xaa\xd9\x82\x27\x13\x69\x14\xb4\xff\x6f\x3f\x7d\xff\x5d\xa4\x8d\x62\x62\xc9\x16\x9b\xfe\x7d\xa5\xf8\x04\x9e\xf6\x83\xbf\x54\x8a\x07\x83\x5f\x92\x5f\xa3\x15\xe1\x15\x0e\x9d\xbd\x27\xee\xf7\x88\xcb\x10\xea\xc7\x09\xec\x33\xdc\x0e\x06\x37\xa7\xab\x61\x9d\xe2\x9d\x42\x8d\xa6\x6f\x27\xb6\xc0\x3f\xd4\x11\x81\x02\x4d\x2e\x9d\xeb\x2a\xcc\xa4\x10\x98\x19\xa8\x4a\x29\x6a\x95\x00\x97\x5a\xef\x80\xd8\xcc\x48\x8f\x41\x51\xcf\x4f\x5d\xb4\xfe\x4f\x9c\xff\x24\xb3\x5b\x34\xfd\x7e\x7f\xcd\x04\x95\xeb\x88\x4b\x7f\xd0\x46\xd6\x49\x65\x26\x39\xa4\x69\x0a\x75\x0c\x0d\x06\xf0\x25\x04\x6b\x6d\xa3\x69\x00\x13\xfb\x68\x9f\x06\xf0\x1c\x0e\x97\xe7\x36\xe0\x3f\x87\x20\x26\x25\x0b\x06\xde\x1d\x1a\xc5\x4b\x51\xa0\xd6\x64\x89\x5d\x01\xdd\x05\xb8\x05\x99\xdd\x47\xa1\x97\x90\x82\x33\x50\x49\x94\x46\x3f\x25\xa2\xc4\x90\x06\x6d\x16\xb3\x6e\x5a\x9a\x82\xa8\x38\xdf\x81\xd4\x3b\xc5\x4d\x03\xbf\xbd\xe9\x91\x8f\x34\x5f\xa4\x29\x54\x82\x3a\x15\xd3\xdd\x4a\x6b\x7c\x5f\x2a\x19\x44\x36\x2e\xec\x56\x0c\x6e\xba\x68\xde\xa3\x86\xf4\x7d\xe4\x90\x1e\xd2\x43\xfa\x00\x41\x57\x99\x7a\x8c\x9e\xaf\x64\x75\xc8\xb9\x8e\x07\xa8\x89\xaa\x98\xa3\x7a\x8c\x9c\xaf\x4c\xd5\xe4\x9c\xaa\xdf\x08\xd3\x59\x3b\x84\xd1\xd5\xe0\x01\xea\xa8\x94\x7c\x90\xb8\x90\x66\xd3\xbf\xe7\x64\x63\x33\x26\xe8\x19\x59\xbe\x76\x95\xa4\xde\xd0\x45\xdc\x09\xb4\x14\x86\xee\x1d\xc1\x04\x7a\xae\x65\xc7\x59\x81\x6e\xd5\x65\x92\x24\x43\x68\x5e\xad\xfd\x8d\x58\x27\x54\x15\x6e\x1f\x90\x47\x57\x59\x66\xe3\xfe\xa7\x48\x54\xd3\x68\x65\xaa\xdb\x9f\x20\x55\x1b\x1b\xf6\xc4\x82\xbf\xfe\x15\x8e\x46\xf7\x61\x1c\xc7\xf0\x2d\x51\xb7\xae\xee\x53\x2a\x5c\xb9\xda\x50\x3b\xbf\x60\x5a\xbb\x9a\x8b\x06\x2a\x05\xd6\x6b\x3e\xee\xd8\x3f\x92\xb1\x9e\x06\x33\x48\x0e\x05\xb4\xc7\x61\x27\x2c\x9c\x88\x16\x1d\xba\xfb\x81\xe0\x6c\xdb\xe5\xb7\xb7\x92\x15\x08\x5f\xa4\x10\x04\xdd\xc5\x47\x33\xec\x84\x96\xd8\x99\x46\xf3\xd6\xdb\xa2\x5f\x47\xc7\x53\xb1\x6b\x30\x84\xf3\x24\x49\x06\x47\x42\x6c\x77\xea\x7d\x55\xda\xb4\x09\x88\xd8\xb8\x23\xb1\xd5\xad\x4b\x1c\x6d\x0a\x64\x8f\x34\x0e\x99\xe4\xdc\xe7\x2c\xf5\x52\xab\xe0\xba\x46\x96\x42\x38\xba\x39\x11\x45\x3b\x9a\xec\x6c\xed\xd0\x3c\x27\x74\x7f\x68\xa2\x7d\x9d\x1d\x4c\x0e\x47\x7b\x46\xd9\xb3\xd7\x69\xc3\x9c\xb5\x72\xb3\x9d\x46\x0f\xcc\xb5\xb3\xd7\xa1\xce\x3a\xf2\x7b\x3a\xcf\x47\x1f\xb8\x8d\x76\xb8\xac\x74\xde\x3f\x10\x74\x70\x73\x6c\x9b\x37\x06\x95\xcd\x92\xa5\x0d\x59\xd6\x16\xf6\x22\xa0\xf0\xc8\x24\x2e\x55\x57\x18\x2a\x14\x14\x55\x93\x52\xf8\xcc\xde\x26\x80\x7b\x26\xf3\x17\xcb\x2e\x9c\x3e\xd2\x61\x5c\x4a\x26\x05\x02\x00\x1c\x38\x81\x03\xea\x1e\x52\xed\x64\xe4\xa4\xd4\x48\x21\x05\xff\x0d\x52\x7f\x10\x55\x82\xdd\xf5\x07\x61\xdd\x3e\xa4\xd1\x8c\xdf\xb4\x97\xc4\x46\xec\xe7\x29\x04\x53\xa3\x80\xd1\xb4\x17\xc0\xf3\x53\x2e\x68\xa3\x6e\x6f\xb6\x93\xa0\xbb\x14\x60\x6a\xe8\xcc\x95\xbb\xfd\x6d\xed\x5f\x41\xf7\xf3\x8f\x4a\xf1\xfe\x11\x59\xb2\x22\x86\x28\x47\x75\x70\xd3\xf9\x5a\xa4\xbe\x26\x66\xd6\x38\x37\xe0\xef\xa3\xae\xaa\x0e\xed\x8b\x28\xd7\x9a\x4b\x45\x51\x85\x8a\x50\x56\xe9\x09\x5c\x94\x77\x37\xff\x6a\x5e\xd4\xb9\xda\xff\xa3\xa2\x96\x0a\x67\x47\x12\xd5\x35\xe4\xe7\x10\x4c\x63\x3b\xe1\x7d\x64\xda\xcd\x76\xbf\xb0\x80\x13\x6f\x38\xa0\xfd\xfe\xa1\xee\x2f\x18\xa5\x1c\xad\xc0\x3b\xf2\xd6\x19\xad\xfd\xbb\x2e\xb5\xcf\x12\xea\x57\x1b\xbb\x35\x5b\x40\xae\xf1\x91\x05\xed\x5b\x92\x9e\x05\x40\x68\xb7\xcc\x9c\xce\xeb\xab\xb6\xeb\x56\x3d\xa7\x8b\xfa\x4b\x36\x5a\x29\x97\x6b\xf5\xc3\x1a\x60\x43\xe8\x69\x9b\xfb\x51\xdd\x1b\x44\x79\x55\x10\xc1\x7e\xc7\xbe\x8d\x4b\x03\xaf\x2b\xf7\xda\x25\x38\x3e\x92\x8f\x84\xd9\xbd\x0f\xe9\x35\x31\xae\x57\x2b\xb1\xd7\x58\xf7\x62\x77\xb3\x9f\x40\x72\xd3\xfb\x48\x0d\x9d\xe6\x12\xce\x89\x82\x6e\x23\x6c\x82\x2f\x28\x69\xb9\x37\x63\x73\xa2\x7a\xbe\x8e\xe1\xf2\x73\x21\xd7\x69\xef\x3c\x69\x85\xf4\x86\x76\x76\xee\xd5\x58\x3b\x32\x86\x95\xb2\x71\xcd\x19\x9c\x27\x9f\x43\x5a\x5f\x0b\x39\xd8\x81\x51\xac\x44\x0a\x24\x33\x6c\x85\xff\x03\x1b\xf9\x0c\x4a\xfe\x68\x11\x2d\x0e\x1b\xe5\x39\x98\xee\xc9\x6b\x47\x5b\xdd\xfe\x3f\xeb\x6f\x10\x3b\x0d\x3f\x87\xe0\xe4\x46\x1e\x44\xe2\xc1\xc4\x03\xd7\x7e\xd8\xef\xdd\x7b\xc4\xe0\x30\xa6\xd8\x6c\xb7\x7d\x05\x3e\x88\x72\x53\xf0\x7e\x30\x35\xee\x4b\x28\x2b\x73\x4b\xc1\x11\xf0\xdd\xfb\x29\xdd\x76\xff\x22\x63\xef\xef\x78\x70\xcf\x82\x4e\x72\xd2\xde\xc5\x9a\x4c\x04\xb6\xbb\x0f\xc6\xe2\x18\x7e\x32\x44\x19\x20\xf0\xf3\x1b\xa8\x4a\x4a\x8c\x8d\x5e\x12\x6c\x7c\xf4\x65\xe7\xe6\x8b\xb2\x39\x51\x1a\x16\x52\xad\x89\xa2\x75\x7d\xc6\xe4\xb8\x71\x6f\xec\x9a\xd4\x4f\xa3\x79\x63\x4f\xb1\x15\xe1\xfd\xa3\x7b\xdf\xd3\x7e\x2f\xea\x9a\xbc\x37\x88\x90\x64\xf9\xf1\x44\x17\xb1\x5a\xbe\x29\x7c\xe7\xae\x00\xfd\xa7\x7d\x93\x33\x3d\x88\x88\x31\xaa\xdf\xdb\x03\x43\x6f\x60\xed\x3a\xea\x5c\xc9\xda\xe5\xd3\x3d\xb7\x7a\x8c\xc6\x2e\x99\x6e\x13\x81\x66\x7a\xa6\x75\xdf\xe3\xaa\x37\xec\xd0\xde\x87\x55\xef\x59\xaf\x35\xd4\xce\xbd\x77\xfb\x48\x4f\x4a\xb2\x47\xba\x67\xbd\xac\x77\xc4\x9e\x50\xfa\xda\xfa\x4f\x3f\x38\xe1\xe9\x87\xe8\x18\xb4\xca\xf6\xe7\xf5\xa3\x5a\xf6\x1f\xdf\x3c\xa0\x62\x46\x7b\x83\x48\x57\x73\x5f\x9b\xe8\x5f\xb6\x17\xb0\x66\x9a\x03\xef\x61\x28\x38\x4a\x28\x2c\x8b\xfd\xa4\x22\x3c\x48\x42\x1e\x89\x1a\x35\x4b\xbf\xab\xed\xd0\x2a\x3c\x19\xb4\xa5\xad\xaf\xb5\x4d\xae\x7c\xed\x7f\x8d\x73\xed\x2a\x09\x50\xe3\xdd\x55\x73\x7c\xd5\xe6\xd5\x0f\x6f\x3a\x95\x9b\xd6\x23\xfa\x8e\x7a\xfb\x19\xf6\xa9\x3a\xc9\xc9\xef\xbe\xd7\xeb\x75\xfd\x89\xbe\x2b\xe2\xb7\x85\x94\x98\x94\x2c\x7a\xa7\x03\x20\x7a\x23\x32\xa0\xb8\x40\x35\xeb\x90\xaf\xab\x2b\xd3\xd8\x7f\xf7\x38\x8d\xfd\x7f\xef\xf8\xef\x00\x00\x00\xff\xff\x61\x20\xb3\xc1\xef\x31\x00\x00")

func faucetHtmlBytes() ([]byte, error) {
	return bindataRead(
		_faucetHtml,
		"faucet.html",
	)
}

func faucetHtml() (*asset, error) {
	bytes, err := faucetHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "faucet.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"faucet.html": faucetHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"faucet.html": {faucetHtml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

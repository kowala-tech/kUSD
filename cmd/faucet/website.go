// Code generated by go-bindata.
// sources:
// faucet.html
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _faucetHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x5a\xff\x73\xdb\xb6\x92\xff\xd9\xf9\x2b\xb6\xbc\xe4\x49\x3a\x9b\xa4\x6c\x27\x79\x3e\x89\x54\x27\x2f\xed\xeb\xe5\xbe\xb4\x9d\x26\x9d\xbb\x37\x6d\xe7\x06\x24\x56\x22\x62\x10\x60\x01\x50\xb2\xea\xd1\xff\x7e\x03\x80\xa4\x48\x49\x76\x93\x26\x77\xd3\xfc\xe0\x90\xf8\xb2\xbb\xd8\xfd\xec\x17\xac\x98\x7c\xf1\xd5\x77\xaf\xdf\xfd\xe3\xfb\xaf\xa1\x30\x25\x5f\x3c\x49\xec\x7f\xc0\x89\x58\xa5\x01\x8a\x60\xf1\xe4\x2c\x29\x90\xd0\xc5\x93\xb3\xb3\xa4\x44\x43\x20\x2f\x88\xd2\x68\xd2\xa0\x36\xcb\xf0\x26\xd8\x4f\x14\xc6\x54\x21\xfe\x5a\xb3\x75\x1a\xfc\x77\xf8\xe3\xab\xf0\xb5\x2c\x2b\x62\x58\xc6\x31\x80\x5c\x0a\x83\xc2\xa4\xc1\x9b\xaf\x53\xa4\x2b\xec\xed\x13\xa4\xc4\x34\x58\x33\xdc\x54\x52\x99\xde\xd2\x0d\xa3\xa6\x48\x29\xae\x59\x8e\xa1\x7b\xb9\x00\x26\x98\x61\x84\x87\x3a\x27\x1c\xd3\xcb\x60\xf1\xc4\xd2\x31\xcc\x70\x5c\xdc\xdf\x47\xdf\xa2\xd9\x48\x75\xbb\xdb\xcd\xe0\x55\x6d\x0a\x14\x86\xe5\xc4\x20\x85\xbf\x93\x3a\x47\x93\xc4\x7e\xa5\xdb\xc4\x99\xb8\x85\x42\xe1\x32\x0d\xac\xe8\x7a\x16\xc7\x39\x15\xef\x75\x94\x73\x59\xd3\x25\x27\x0a\xa3\x5c\x96\x31\x79\x4f\xee\x62\xce\x32\x1d\x9b\x0d\x33\x06\x55\x98\x49\x69\xb4\x51\xa4\x8a\xaf\xa3\xeb\xe8\xaf\x71\xae\x75\xdc\x8d\x45\x25\x13\x51\xae\x75\x00\x0a\x79\x1a\x68\xb3\xe5\xa8\x0b\x44\x13\x40\xbc\xf8\x63\x7c\x97\x52\x98\x90\x6c\x50\xcb\x12\xe3\xe7\xd1\x5f\xa3\xa9\x63\xd9\x1f\x7e\x9c\xab\x65\xab\x73\xc5\x2a\x03\x5a\xe5\x1f\xcc\xf7\xfd\xaf\x35\xaa\x6d\x7c\x1d\x5d\x46\x97\xcd\x8b\xe3\xf3\x5e\x07\x8b\x24\xf6\x04\x17\x9f\x44\x3b\x14\xd2\x6c\xe3\xab\xe8\x79\x74\x19\x57\x24\xbf\x25\x2b\xa4\x2d\x27\x3b\x15\xb5\x83\x9f\x8d\xef\x43\x36\x7c\x7f\x68\xc2\xcf\xc1\xac\x94\x25\x0a\x13\xbd\xd7\xf1\x55\x74\x79\x13\x4d\xdb\x81\x63\xfa\x8e\x81\x35\x9a\x65\x75\x16\xad\x51\x59\xe4\xf2\x30\x47\x61\x50\xc1\xbd\x1d\x3d\x2b\x99\x08\x0b\x64\xab\xc2\xcc\xe0\x72\x3a\x7d\x36\x3f\x35\xba\x2e\xfc\x30\x65\xba\xe2\x64\x3b\x83\x25\xc7\x3b\x3f\x44\x38\x5b\x89\x90\x19\x2c\xf5\x0c\x3c\x65\x37\xb1\x73\x3c\x2b\x25\x57\x0a\xb5\x6e\x98\x55\x52\x33\xc3\xa4\x98\x59\x44\x11\xc3\xd6\x78\x6a\xad\xae\x88\x38\xda\x40\x32\x2d\x79\x6d\xf0\x40\x90\x8c\xcb\xfc\xd6\x8f\x39\x6f\xee\x1f\x22\x97\x5c\xaa\x19\x6c\x0a\xd6\x6c\x03\xc7\x08\x2a\x85\x0d\x79\xa8\x08\xa5\x4c\xac\x66\xf0\xb2\x6a\xce\x03\x25\x51\x2b\x26\x66\x30\xdd\x6f\x49\xe2\x56\x8d\x49\xec\x03\xd7\x93\xb3\x24\x93\x74\xeb\x6c\x48\xd9\x1a\x72\x4e\xb4\x4e\x83\x03\x15\xbb\x80\x34\x58\x60\xe3\x10\x61\xa2\x9d\x1a\xcc\x29\xb9\x09\xc0\x31\x4a\x03\x2f\x44\x98\x49\x63\x64\x39\x83\x4b\x2b\x5e\xb3\xe5\x80\x1e\x0f\xf9\x2a\xbc\xbc\x6a\x27\xcf\x92\xe2\xb2\x25\x62\xf0\xce\x84\xce\x3e\x9d\x65\x82\x45\xc2\xda\xbd\x4b\x02\x4b\x12\x66\xc4\x14\x01\x10\xc5\x48\x58\x30\x4a\x51\xa4\x81\x51\x35\x5a\x1c\xb1\x05\xf4\xc3\xdf\x03\xd1\xaf\xb8\x6c\xe5\x8a\x29\x5b\x37\xc7\xea\x3d\x1e\x9c\xf0\xe1\x43\xdc\x40\xf3\x20\x97\x4b\x8d\x26\xec\x9d\xa9\xb7\x98\x89\xaa\x36\xe1\x4a\xc9\xba\xea\xe6\xcf\x12\x37\x0a\x8c\xa6\x41\xad\x78\xd0\x84\x7f\xf7\x68\xb6\x55\xa3\x8a\xa0\x3b\xb8\x54\x65\x68\x2d\xa1\x24\x0f\xa0\xe2\x24\xc7\x42\x72\x8a\x2a\x0d\xde\xca\x9c\x11\x0e\xc2\x9f\x19\x7e\xfc\xe1\x3f\xa0\x31\x19\x13\x2b\xd8\xca\x5a\xc1\xbf\xcb\x0d\xe1\x04\x08\xa5\x16\xac\x51\x14\xf5\xc4\x70\xc8\x3d\x16\x34\xcc\x8c\xd8\xaf\x3a\x4b\xb2\xda\x18\xd9\x2d\xcc\x8c\x80\xcc\x88\x90\xe2\x92\xd4\xdc\x00\x55\xb2\xa2\x72\x23\x42\x23\x57\x2b\x9b\xe7\xfc\x11\xfc\xa6\x00\x28\x31\xa4\x99\x4a\x83\x76\x6d\x6b\x41\xa2\x2b\x59\xd5\x55\x63\x43\x3f\x88\x77\x15\x11\x14\xa9\xb5\x38\xd7\x18\x2c\xbe\x61\x6b\x84\x12\xa1\xfc\xf1\xed\x57\x67\x87\x78\xc8\x89\x42\x13\xf6\x69\x1e\xa1\x22\x89\xbd\x2c\xfe\x44\xd0\xfc\x4b\x6a\xde\x52\xea\x4e\x50\xa2\xa8\x61\xf0\x16\x2a\x1b\x54\x82\xc5\xfd\xbd\x22\x62\x85\xf0\x94\xd1\xbb\x0b\x78\x4a\x4a\x59\x0b\x03\xb3\x14\xa2\x57\xee\x51\xef\x76\x03\xea\x00\x09\x67\x8b\x84\x3c\x86\x6d\x90\x22\xe7\x2c\xbf\x4d\x03\xc3\x50\xa5\xf7\xf7\x96\xf8\x6e\x37\x87\xfb\x7b\xb6\x84\xa7\xd1\x0f\x98\x93\xca\xe4\x05\xd9\xed\x56\xaa\x7d\x8e\xf0\x0e\xf3\xda\xe0\x78\x72\x7f\x8f\x5c\xe3\x6e\xa7\xeb\xac\x64\x66\xdc\x6e\xb7\xe3\x82\xee\x76\x56\xe6\x46\xce\xdd\x0e\x62\x4b\x54\x50\xbc\x83\xa7\xd1\xf7\xa8\x98\xa4\x1a\xfc\xfa\x24\x26\x8b\x24\xe6\x6c\xd1\xec\x1b\x2a\x29\xae\xf9\x1e\x2e\xb1\xc5\x4b\x07\x72\xe7\x33\x4e\xd4\xbe\xa4\x27\x5c\x60\x15\x76\xd2\x37\x70\xd0\xcc\xe0\x2d\x6e\xd3\xe0\xfe\xbe\xbf\xb7\x99\xcd\x09\xe7\x19\xb1\x7a\xf1\x47\xeb\x36\xfd\x86\x16\xa6\x6b\xa6\x5d\x3d\xb5\x68\x25\xd8\x8b\xfd\x81\x3e\x7d\x10\xb5\x8c\xac\x66\x70\x7d\xd5\x0b\x59\xa7\xdc\xfd\xe5\x81\xbb\x5f\x9f\x5c\x5c\x11\x81\x1c\xdc\xdf\x50\x97\x84\xb7\xcf\x8d\xb3\xf4\x7c\xef\x70\x53\x68\x03\x74\x27\x5a\x17\xe8\xa7\x73\x90\x6b\x54\x4b\x2e\x37\x33\x20\xb5\x91\x73\x28\xc9\x5d\x97\xec\xae\xa7\xd3\xbe\xdc\xb6\x0e\x24\x19\x47\x17\x5a\x14\xfe\x5a\xa3\x36\xba\x0b\x24\x7e\xca\xfd\xb5\xf1\x84\xa2\xd0\x48\x0f\xb4\x61\x39\x5a\xd5\xba\x55\x3d\xd3\x77\xca\x3c\x29\xfb\x52\xca\x2e\x7f\xf4\xc5\x68\x48\xf7\x52\x5d\xb0\x48\x8c\xda\xaf\x3b\x4b\x0c\xfd\xa8\xf8\xaf\x6c\x7d\xf7\x50\xf8\xf7\x01\xcd\x9e\xbd\x42\x54\xbe\xb8\xb0\x90\x05\xf7\x9a\xc4\x86\x7e\x02\x67\x0b\xc2\x8c\x68\xfc\x10\xf6\x2e\xcd\xef\xd9\xbb\xd7\x4f\xe5\x5f\x20\x51\x26\x43\x62\x3e\x44\x80\x65\x2d\x68\xef\xfc\x36\x74\x7e\x2a\xff\x5a\xb0\x35\x2a\xcd\xcc\xf6\x43\x05\x40\xba\x97\xc0\xbf\x0f\x45\x48\x62\xa3\x1e\x87\x5a\xff\xe5\x33\xf9\xf6\xef\x95\x23\xd7\x8b\x7f\x95\x1b\xa0\x12\x35\x98\x82\x69\xb0\x89\xf5\xcb\x24\x2e\xae\xbb\x25\xd5\xe2\x9d\x9d\xb0\x3a\x85\xa5\xab\x2a\x80\x69\x50\xb5\x70\x49\x57\x0a\x30\x05\x0e\x2b\x91\x26\x3f\x47\xf0\x4e\xda\x6a\x6e\x8d\xc2\x40\x49\x38\xcb\x99\xac\x35\x90\xdc\x48\xa5\x61\xa9\x64\x09\x78\x57\x90\x5a\x1b\x4b\xc8\x06\x0f\xb2\x26\x8c\x3b\x4f\x72\x06\x05\xa9\x80\xe4\x79\x5d\xd6\xb6\x1a\x15\x2b\x40\x21\xeb\x55\xe1\x45\x31\x12\x7c\x56\xe2\x52\xac\x3a\x71\x74\x45\x4a\x20\xc6\x90\xfc\x56\x5f\x40\x1b\x12\x80\x28\x04\xc3\x90\xda\x5d\xb9\x2c\x4b\x29\xe0\x5a\x51\xa8\x88\x32\x5b\xd0\xc3\xaa\x82\xe4\xb9\x4b\x71\x11\xbc\x12\x5b\x29\x10\x0a\xb2\x76\x02\xc2\x3b\x7f\x91\xb8\x80\x6f\xa4\x5c\x71\x3c\xb7\xf2\xfd\x9d\xe4\x98\x49\xd9\x6d\x83\x92\x6c\x5b\xbe\xcd\x29\x36\xcc\x14\xcc\xab\xa9\x42\x55\x5a\x1a\x14\x38\x2b\x99\xd1\x51\x12\x57\xfb\xb8\xba\xcf\xd0\x3c\x2c\xa4\x62\xbf\xd9\xda\x86\xf7\x83\xa8\x39\x08\x31\x6d\x84\x74\xc6\xe7\xb8\x34\x33\x78\xee\x23\xe4\x21\x9c\x9b\x4b\xd0\x29\x2c\xb7\x34\xdd\xe5\xd2\xa6\x9d\x19\x5c\xfb\x8a\xd6\x97\x13\xd4\xf4\x24\xa0\x07\x88\xf3\x4c\x6f\x6e\xaa\xbb\x4e\x8e\xae\x2c\x9e\x76\x44\x2c\x12\x86\x4a\x59\xb3\x9e\x3e\x4b\x72\x8b\x40\x20\x21\x07\x97\xe4\x46\x68\x77\xc5\x62\xae\x45\x10\x9b\x0d\xa2\xf9\xd2\x7a\x70\xfa\x83\x27\xc8\xc4\xea\xd9\xd5\xd4\x23\xd3\x3e\x58\xf2\xcf\xae\xa6\x4c\x18\xf9\xec\x6a\x3a\xbd\x9b\x7e\xe0\xbf\x67\x57\x53\x29\x9e\x5d\x4d\x4d\x81\xcf\xae\xa6\xcf\xae\xae\xfb\x98\xf6\x23\xbe\xb8\xb4\x6b\x50\x5b\x5e\x2d\xd0\x03\x30\x44\xad\xd0\xa4\xc1\xff\x90\x4c\xd6\x66\x96\x71\x22\x6e\x83\x85\x13\xd6\x56\x1c\x0e\x03\xa7\x0a\x54\xa8\x88\xb6\x70\xb0\xd2\x3a\x84\x34\xad\x10\x0d\x63\x5d\x2b\x25\x6b\x61\xf3\x22\xd8\xf3\x3a\x27\x15\x23\x8b\x30\xab\x94\x49\x94\x64\x2a\x5e\xbc\x96\xd5\x36\x74\x44\xdc\xf6\x23\x15\xea\xba\xaa\xa4\x32\x51\x5f\x95\xc4\x5e\x83\x38\xea\xf8\x66\xfa\xe2\xe6\xe5\xa3\xc2\x6b\x5b\x64\xbb\x13\x74\x12\x92\x4c\xae\x11\x7c\x49\x9f\xc9\x3b\x20\x82\xc2\x92\x29\x04\xb2\x21\xdb\x2f\x92\x98\xba\x0b\xd8\xa7\x23\x76\xe5\x9c\x2c\xac\x78\xad\x6d\x11\xc2\xac\x93\xfe\xa9\xe0\xeb\xa3\x00\x7c\xcf\x6b\x7d\x01\x55\x9d\x71\xa6\x0b\x20\x20\x70\x03\x89\x36\x4a\x8a\xd5\xc2\x8d\xe6\xf6\x82\xea\x5e\xa1\x92\xda\x3c\x8c\x05\x2c\x33\xa4\xf4\x04\x1a\xfe\x20\x18\x2c\x37\x67\xc0\xff\x7f\xe3\x2d\x9b\xb0\xf8\xa7\x32\x58\x1b\xab\xff\x9c\xd6\x3a\x72\xdd\xcd\x66\x13\xb5\x7a\x74\x7e\x5b\x20\xaf\x62\x9b\xbe\x6a\xc1\xcc\x36\xf6\xd1\x4f\x8a\xf8\x4b\x46\xd3\xab\x9b\xab\x97\x2f\xaf\x9e\xff\xcb\xcd\x8b\x17\x57\x37\xcf\x5f\x3c\xe4\xd4\x1d\x24\xfe\xb8\x4f\xfb\x3b\xd0\xb7\xf2\x55\x6d\x8a\xee\x02\xe4\xd1\xd2\x16\xde\xb6\xbe\xa2\xf6\x02\xa9\x82\x3f\x8c\xa0\x5a\xd8\x2a\x32\x24\xfc\x64\x01\xf8\x11\x18\x72\x20\x7a\x44\xb2\x4f\x04\x56\x0b\x1e\x8b\x13\x59\x1b\x7b\xc2\xb6\x0d\xc3\xa4\xe8\xc0\x74\x01\x9a\x95\x15\xdf\x42\xbe\xb7\xfa\x29\x54\x3d\x68\x92\xdf\x05\xd5\xd0\x68\x1e\x62\xbe\x72\x93\x14\x6d\xc9\xa6\x6b\x9d\x63\xe5\xba\xf3\xb6\x0e\xfa\xdb\xf6\x37\x22\x0c\x13\xd8\xd6\x4b\x11\x7c\x27\xf8\x16\x6a\x8d\xb0\x94\x0a\x28\x66\xf5\x6a\xe5\x6a\x3c\x05\x95\x62\x6b\x62\xb0\x2d\x92\x74\x83\x89\x0e\x12\xbd\x4b\xa9\x2d\x57\x79\xaf\x7a\xfc\x87\xac\x21\x27\x02\x8c\x22\xf9\xad\xf7\x93\x5a\x29\xeb\x27\x15\xfa\xd3\x74\x65\x5a\x86\x5c\x6e\xdc\x12\x7f\xee\x25\x43\xee\x6a\x36\x8d\x08\x85\xdc\x40\x59\xe7\xce\x19\x6d\x4d\xe6\x0e\xb1\x21\xcc\x40\x2d\x0c\xe3\x5e\x9b\xa6\x56\xc2\x56\x78\x38\x28\xad\x8e\xae\xed\x09\x96\x8b\x77\x05\x9e\xa8\x67\xbb\x0b\x37\x28\x7c\xed\x97\x43\xa5\xa4\xc1\xdc\x9a\x13\xc8\x8a\x30\xa1\xad\x45\x5c\xf1\x86\xe5\x07\x5c\xc8\xbb\xa7\xe6\x61\xdf\x59\x76\xd3\x71\x0c\xdf\x70\x99\x11\x0e\x6b\x8b\xf3\x8c\xdb\x52\x5c\x42\x21\xed\xd1\x7b\xda\xd2\x86\x98\x5a\x83\x5c\xba\x51\x2f\xb9\xdd\xbf\x26\xca\x5a\x10\xcb\xca\x40\xda\xf4\x45\xed\x98\x46\xb5\x6e\xba\xbd\xf6\xd5\x30\x54\x83\xf9\x4e\xeb\x29\xfc\xf4\xcb\xfc\x49\x23\xca\x57\xb8\x74\x90\xb0\xe8\xf6\x47\x36\x05\x31\x90\x2b\x24\x06\x35\xe4\x5c\xea\x5a\x79\x09\xa9\x92\x15\x58\x29\x5b\x4a\x2d\x65\x3b\x51\x39\x6e\x2d\x91\x71\x41\x74\x31\x69\xda\xba\x0a\x9d\x95\xba\xb9\x76\xfc\xcc\xa2\x6e\x6c\x09\xb0\x74\x3a\x07\x96\xb4\x74\x23\x8e\x62\x65\x8a\x39\xb0\xf3\xf3\x6e\xf1\x19\x5b\xc2\xb8\x5d\xf1\x13\xfb\x25\x32\x77\x91\xe5\x02\x69\x0a\x7d\x6e\x8e\x61\x43\x47\x57\x9c\xe5\x38\x66\x17\x70\x39\x99\xb7\xb3\x99\x42\x72\xdb\xbe\x35\x76\xf4\xff\xb9\xbf\xbb\xf9\x50\x33\x4e\xf9\x03\xdd\xf8\xb6\x8d\x06\x02\x2b\xa6\x0d\xd4\x8a\x43\xe3\xc3\xde\x04\x9d\x41\xdc\xba\xbe\x56\x8e\x70\xd9\x3c\x34\x98\x6a\x8f\xe0\xc9\x44\x1a\x05\x1d\xff\xdb\xdb\xef\xbe\x8d\xb4\x51\x4c\xac\xd8\x72\x3b\xbe\xaf\x15\x9f\xc1\xd3\x71\xf0\x4f\xb5\xe2\xc1\xe4\xa7\xe9\x2f\xd1\x9a\xf0\x1a\x2f\x9c\xbd\x67\xee\xef\x11\x97\x0b\x68\x1e\x67\x30\x64\xb8\x9b\x4c\xe6\xa7\x5b\x5c\xbd\x8e\x9c\x42\x8d\x66\x6c\x17\x76\xc0\x3f\xd4\x11\x81\x12\x4d\x21\x9d\xeb\x2a\xcc\xa5\x10\x98\x1b\xa8\x2b\x29\x1a\x95\x00\x97\x5a\xef\x81\xd8\xae\x48\x8f\x41\xd1\xac\x4f\x5d\xa2\xfe\x2f\xcc\xde\xca\xfc\x16\xcd\x78\x3c\xde\x30\x41\xe5\x26\xe2\xd2\x07\xda\xc8\x3a\xa9\xcc\x25\x87\x34\x4d\xa1\xc9\xa1\xc1\x04\xbe\x84\x60\xa3\x6d\x36\x0d\x60\x66\x1f\xed\xd3\x04\xce\xe1\x70\x7b\x61\x73\xfd\x39\x04\x31\xa9\x58\x30\xf1\xee\xd0\x2a\x5e\x8a\x12\xb5\x26\x2b\xec\x0b\xe8\xae\xb5\x1d\xc8\xec\x39\x4a\xbd\x82\x14\x9c\x81\x2a\xa2\x34\xfa\x25\x11\x25\x86\xb4\x68\xb3\x98\x75\xcb\xd2\x14\x44\xcd\xf9\x1e\xa4\xde\x29\xe6\x2d\xfc\x06\xcb\x23\x9f\x69\xbe\x48\x53\xa8\x05\x75\x2a\xa6\xfb\x9d\xd6\xf8\xbe\xff\x31\x89\x6c\x5e\xd8\xef\x98\xcc\xfb\x68\x1e\x50\x43\xfa\x7b\xe4\x90\x1e\xd2\x43\xfa\x00\x41\xd7\x6e\x7a\x8c\x9e\x6f\x4f\xf5\xc8\xb9\x81\x07\xa8\x89\xba\xcc\x50\x3d\x46\xce\xb7\x9b\x1a\x72\x4e\xd5\x6f\x84\xe9\xed\xbd\x80\xcb\x97\x93\x07\xa8\xa3\x52\xf2\x41\xe2\x42\x9a\xed\xf8\x9e\x93\xad\xad\x98\x60\x64\x64\xf5\xda\xb5\x87\x46\x17\x2e\xe3\xce\xa0\xa3\x70\xe1\xda\xfe\x33\x18\xb9\x37\x3b\xcf\x4a\x74\xbb\x5e\x4c\xa7\xd3\x0b\x68\x7f\x2d\xfb\x1b\xb1\x4e\xa8\x6a\xdc\x3d\x20\x8f\xae\xf3\xdc\xe6\xfd\x4f\x91\xa8\xa1\xd1\xc9\xd4\xbc\x7f\x82\x54\x5d\x6e\x18\x88\x05\x7f\xf9\x0b\x1c\xcd\x0e\x61\x1c\xc7\xf0\x9f\x44\xdd\xba\x6e\x4e\xa5\x70\xed\x3a\x3e\xdd\xfa\x92\x69\xed\x5a\x29\x1a\xa8\x14\xd8\xec\xf9\xb8\xb0\x7f\x24\x63\xb3\x0c\x16\x30\x3d\x14\xd0\x86\xc3\x5e\x5a\x38\x91\x2d\x7a\x74\x87\x89\xe0\x6c\xd7\xe7\x37\xd8\xc9\x4a\x84\x2f\x52\x08\x82\xfe\xe6\xa3\x15\x76\x41\x47\xec\x4c\xa3\x79\xe7\x6d\x31\x6e\xb2\xe3\xa9\xdc\x35\xb9\x80\xeb\xe9\x74\x3a\x39\x12\x62\xb7\x57\xef\xab\xca\x96\x4d\x40\xc4\xd6\x85\xc4\x4e\xb7\xae\x70\xb4\x25\x90\x0d\x69\x1c\x72\xc9\xb9\xaf\x59\x9a\xad\x56\xc1\x4d\xeb\x2b\x85\xf0\x72\x7e\x22\x8b\xf6\x34\xd9\x3b\xda\xa1\x79\x4e\xe8\xfe\xd0\x44\x43\x9d\x1d\x2c\x0e\x2f\x07\x46\x19\xd8\xeb\xb4\x61\xce\x3a\xb9\xd9\x5e\xa3\x07\xe6\xda\xdb\xeb\x50\x67\x3d\xf9\x3d\x9d\xf3\xcb\x0f\x3c\x46\x37\x5d\xd5\xba\x18\x1f\x08\x3a\x99\x1f\xdb\xe6\x8d\x41\x65\xab\x64\x69\x53\x96\xb5\x85\xbd\x08\x28\x3c\x32\x89\x2b\xd5\x15\x86\x0a\x05\x45\xd5\x96\x14\xbe\xb2\xb7\x05\xe0\xc0\x64\xfe\x4e\xd9\x87\xd3\x47\x3a\x8c\x2b\xc9\xa4\x40\x00\x80\x03\x27\x70\x40\x1d\x20\xd5\x2e\x46\x4e\x2a\x8d\x14\x52\xf0\x1f\x2f\x8c\x27\x51\x2d\xd8\xdd\x78\x12\x36\xef\x87\x34\xda\xf9\x79\x77\x49\x6c\xc5\x3e\x4f\x21\x48\x8c\x02\x46\xd3\x51\x00\xe7\xa7\x5c\xd0\x66\xdd\xd1\x62\x2f\x41\x7f\x2b\x40\x62\xe8\xc2\xf5\xb0\xfd\x6d\xed\xe7\x20\x23\xf9\xed\xca\x5d\x84\x66\xb6\xd4\x1a\x1f\x91\x25\x6b\x62\x88\x72\x54\x27\x73\xd8\x2f\x6f\xae\x89\xb9\x35\xce\x1c\xfc\x7d\xd4\xb5\xca\xa1\xfb\x75\xc9\xbd\x65\x52\x51\x54\xa1\x22\x94\xd5\x7a\x06\xcf\xab\xbb\xf9\xcf\xed\xaf\x6f\xae\xa1\xff\xa8\xa8\x95\xc2\xc5\x91\x44\x4d\x6b\xf8\x1c\x82\x24\xb6\x0b\x7e\x8f\x4c\x77\xd8\xfe\x47\x13\x70\xe2\x67\x0b\xe8\x3e\x69\x68\xc6\x4b\x46\x29\x47\x2b\xf0\x9e\xbc\x75\x46\x6b\xff\xbe\x4b\x0d\x59\x42\xf3\x7b\xc5\x7e\xcf\x0e\x90\x6b\x7c\x64\x43\xf7\xd3\xc7\xc8\x02\x20\xb4\x47\x66\x4e\xe7\xcd\x55\xdb\x0d\xab\x91\xd3\x45\xf3\x09\x0c\xad\x95\xab\xb5\xc6\x61\x03\xb0\x0b\x18\x69\x5b\xfb\x51\x3d\x9a\x44\x45\x5d\x12\xc1\x7e\xc3\xb1\xcd\x4b\x13\xaf\x2b\xf7\x5b\x4a\x70\x1c\x92\x8f\x84\xd9\xff\xc8\x31\x6a\x73\xdc\xa8\x51\xe2\xa8\xb5\xee\xf3\xfd\xcd\x7e\x06\xd3\xf9\xe8\x23\x35\x74\x9a\x4b\x98\x11\x05\xfd\x97\xb0\x4d\xbe\xa0\xa4\xe5\xde\xce\x65\x44\x8d\x7c\x1f\xc3\xd5\xe7\x42\x6e\xd2\xd1\xf5\xb4\x13\xd2\x1b\xda\xd9\x79\xd4\x60\xed\xc8\x18\x56\xca\xd6\x35\x17\x70\x3d\xfd\x1c\xd2\xfa\x5e\xc8\xc1\x09\x8c\x62\x15\x52\x20\xb9\x61\x6b\xfc\x3f\x38\xc8\x67\x50\xf2\x47\x8b\x68\x71\xd8\x2a\xcf\xc1\x74\x20\xaf\x9d\xed\x74\xfb\xcf\xd6\xdf\x20\x76\x1a\x3e\x87\xe0\xe4\x41\x1e\x44\xe2\xc1\xc2\x03\xd7\x7e\xd8\xef\xdd\x8f\x83\xc1\x61\x4e\xb1\xd5\x6e\xf7\xbb\xf6\x24\x2a\x4c\xc9\xc7\x41\x62\xdc\xc7\x4d\x56\xe6\x8e\x82\x23\xe0\x87\x87\x25\xdd\x6e\x78\x91\xb1\xf7\x77\x3c\xb8\x67\x41\xaf\x38\xe9\xee\x62\x6d\x25\x02\xbb\xfd\x37\x60\x71\x0c\x6f\x0d\x51\x06\x08\xfc\xf8\x06\xea\x8a\x12\x63\xb3\x97\x04\x9b\x1f\x7d\xc7\xb9\xfd\x48\x2c\x23\x4a\xc3\x52\xaa\x0d\x51\xb4\xe9\xcf\x98\x02\xb7\xee\x87\xb8\xb6\xf4\xd3\x68\xde\xd8\x28\xb6\x26\x7c\x7c\x74\xef\x7b\x3a\x1e\x45\x7d\x93\x8f\x26\x11\x92\xbc\x38\x5e\xe8\x32\x56\xc7\x37\x85\x6f\xdd\x15\x60\xfc\x74\x6c\x0a\xa6\x27\x11\x31\x46\x8d\x47\x03\x30\x8c\x26\xd6\xae\x97\xbd\x2b\x59\xb7\x3d\x19\xb8\xd5\x63\x34\xf6\xc5\x74\x57\x08\xb4\xcb\x73\xad\xc7\x1e\x57\xa3\x8b\x1e\xed\x21\xac\x46\xcf\x46\x9d\xa1\xf6\xee\xbd\x3f\x47\x7a\x52\x92\x01\xe9\x91\xf5\xb2\xd1\x11\x7b\x42\xe9\x6b\xeb\x3f\xe3\xe0\x84\xa7\x1f\xa2\x63\xd2\x29\xdb\xc7\xeb\x47\xb5\xec\xbf\xa8\x79\x40\xc5\x8c\x8e\x26\x91\xae\x33\xdf\x9b\x18\xbf\xe8\x2e\x60\xed\x32\x07\xde\xc3\x54\x70\x54\x50\x58\x16\xc3\xa2\x22\x3c\x28\x42\x1e\xc9\x1a\x0d\x4b\x7f\xaa\xdd\x85\x55\xf8\x74\xd2\xb5\xb6\xbe\xd6\xb6\xb8\xf2\x6d\xff\x0d\x66\xda\x75\x12\xa0\xc1\xbb\xeb\xe6\xf8\xae\xcd\xab\xef\xdf\xf4\x3a\x37\x9d\x47\x8c\x1d\xf5\xee\xfb\xcd\x53\x7d\x92\x93\x1f\x8c\x6e\x36\x9b\xc8\xff\x96\xe5\x9a\xf8\x5d\x23\x25\x26\x15\x8b\xde\xeb\x00\x88\xde\x8a\x1c\x28\x2e\x51\x2d\x7a\xe4\x9b\xee\x4a\x12\xfb\x4f\x19\x93\xd8\x7d\xad\xfd\xbf\x01\x00\x00\xff\xff\xc2\x81\xfa\x1e\xbd\x2d\x00\x00")

func faucetHtmlBytes() ([]byte, error) {
	return bindataRead(
		_faucetHtml,
		"faucet.html",
	)
}

func faucetHtml() (*asset, error) {
	bytes, err := faucetHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "faucet.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"faucet.html": faucetHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"faucet.html": {faucetHtml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
